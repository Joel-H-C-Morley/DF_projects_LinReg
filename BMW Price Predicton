{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"16RGYZ9cmBd12b8sn72W0llqKsbhDKKLS","timestamp":1675848642690},{"file_id":"1KdjQr6MLFO5P2VG2fsje8pP0K5w6plYt","timestamp":1675762006028}],"authorship_tag":"ABX9TyMlNyoHJRzcZ3csW6rWQEbU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["###Imports and connect to drive"],"metadata":{"id":"35SwpJQ7LG3Q"}},{"cell_type":"markdown","source":["### Build data frame\n","Also change column types to integers\n","\n","Drop rows that have only a few nulls for columns with few null values\n","\n","Drop useless columns"],"metadata":{"id":"EeisFnEPLO1p"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np\n","import pandas as pd\n","import os\n","from google.colab import files\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LinearRegression # is the package to build the linear regression model\n","from sklearn import metrics # contains functions for module evaluation\n","from sklearn.model_selection import train_test_split # module to split our data into train and test sets\n","import statsmodels.api as sm\n","import statsmodels.tools\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","file_path = 'drive/MyDrive/Colab Notebooks/BMW'\n","\n","filename_list = [filename for filename in os.listdir(file_path)]\n","\n","dfs = []\n","'''\n","for filename in filename_list:\n","    my_df = pd.read_csv(file_path+'/'+filename)\n","    my_df['filename'] = filename\n","    dfs.append(my_df)'''\n","\n","for filename in filename_list:\n","    my_df = pd.read_csv(file_path+'/'+filename)\n","    my_df['filename'] = filename\n","    df_in = pd.DataFrame(my_df)\n","    df_in['name'] = filename[:-4]\n","    dfs.append(df_in)\n","    df = pd.concat(dfs, ignore_index=True)\n","\n","## Change price and engine size columsn to integers\n","df['price'] = df['price'].str.replace('Â£','').str.replace(',','')\n","df = df.astype({'price': int})\n","df['engine'] = df['engine'].str.replace('L','')\n","df = df.astype({'engine': float})\n","\n","df = df.astype({'mileage': float})\n","\n","\n","# Drop any cars with no year entry, too difficult to predict\n","df = df.dropna(subset=['year']).reset_index()\n","\n","# Put year column into usable int value\n","df['year'] = df['year'].str.replace('(','').str.replace(')','')\n","df['C.year'] = df['year'].str.split().str.get(0)\n","df['C.reg'] = df['year'].str.split().str.get(1) + ' ' + df['year'].str.split().str.get(2)\n","df = df.astype({'C.year': int})\n","# Rows of 'null' sin mileage, transmission, fuel, body can all be dropped\n","df = df.dropna(subset=['mileage', 'transmission', 'fuel', 'body']).reset_index(drop=True)\n","# Drop ULEZ column all together\n","df= df.drop(['ULEZ', 'filename', 'link','year'], axis=1)\n","#Remove any rows that have both engine and BHP as null (engine size is strong predictor of BHP)\n","df = df.dropna(subset=['BHP','engine'], how='all')\n","df.reset_index(inplace=True, drop=True)\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S0IoB346AWmp","executionInfo":{"status":"ok","timestamp":1676238922769,"user_tz":0,"elapsed":3439,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"08200179-5736-4219-f6a8-200db33c563b"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-21-6af1ccad7bf9>:48: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.\n","  df['year'] = df['year'].str.replace('(','').str.replace(')','')\n"]},{"output_type":"execute_result","data":{"text/plain":["index               0\n","name                0\n","price               0\n","mileage             0\n","BHP             16836\n","transmission        0\n","fuel                0\n","owners          16719\n","body                0\n","engine            528\n","C.year              0\n","C.reg               0\n","dtype: int64"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["### Predict BHP using linear regression\n","\n","Engine, body, fuel, year and transmission an be used as features"],"metadata":{"id":"6LBv25p1MNhR"}},{"cell_type":"markdown","source":["Encode the categorical columns that contribute to BHP"],"metadata":{"id":"CePNcjExMHXK"}},{"cell_type":"code","source":["df_enc_body = pd.get_dummies(df, columns = ['body'], drop_first = False, prefix = 'body')\n","df_enc_body_fuel = pd.get_dummies(df_enc_body, columns = ['fuel'], drop_first = False, prefix = 'fuel')\n","df_enc_body_fuel_trans = pd.get_dummies(df_enc_body_fuel, columns = ['transmission'], drop_first = False, prefix = 'trans')\n","#df_enc_body_fuel_trans.columns\n","#df_enc_body_fuel_trans.head(5)"],"metadata":{"id":"Rb7U5u0oB6fd","executionInfo":{"status":"ok","timestamp":1676238922770,"user_tz":0,"elapsed":9,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["feature_cols = ['engine', 'body_Convertible', 'body_Coupe', 'body_Estate',\n","                'body_Hatchback', 'body_MPV', 'body_SUV', 'body_Saloon', 'fuel_Diesel',\n","                'fuel_Diesel Hybrid', 'fuel_Electric', 'fuel_Petrol',\n","                'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid', 'trans_Automatic',\n","                'trans_Manual','C.year']\n","\n","# Simple linear regression model using sklearn\n","def simp_model_sk(dataframe, Xparams, yparam):\n","\n","    feature_cols = Xparams\n","\n","    X = dataframe[feature_cols]\n","    y = dataframe[[yparam]]\n","\n","    lin_reg = LinearRegression()\n","    results = lin_reg.fit(X, y)\n","    dataframe['y_pred'] = results.predict(X)\n","\n","    rmse = (metrics.mean_squared_error(y, dataframe['y_pred']))**0.5\n","\n","    labeled = list(zip(feature_cols, lin_reg.coef_))\n","    print(f'the RMSE is {rmse}')\n","    print(f'The intercept is {lin_reg.intercept_}')\n","    print(f'The coefficients are: {labeled}')\n","    return results\n","\n","df_enc_nonull = df_enc_body_fuel_trans.dropna(subset=['BHP','engine']).reset_index()\n","\n","lin_model = simp_model_sk(df_enc_nonull,feature_cols,'BHP')\n","bhp_pred = pd.DataFrame(lin_model.predict(df_enc_nonull.loc[:,feature_cols]))\n","sns.scatterplot(x = 'engine',\n","                y = 'BHP',\n","                data = df)\n","sns.scatterplot(x = df_enc_nonull['engine'],\n","                y = bhp_pred.iloc[:,0])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":409},"id":"7OV4OIfXCQBc","executionInfo":{"status":"ok","timestamp":1676238930587,"user_tz":0,"elapsed":313,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"d5f94bad-1663-4f84-b510-74eed3f823dc"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["the RMSE is 30.75157001076328\n","The intercept is [-9.27280497e+13]\n","The coefficients are: [('engine', array([1.26353900e+02, 4.26142014e+13, 4.26142014e+13, 4.26142014e+13,\n","       4.26142014e+13, 4.26142014e+13, 4.26142014e+13, 4.26142014e+13,\n","       4.47544570e+13, 4.47544570e+13, 4.47544570e+13, 4.47544570e+13,\n","       4.47544570e+13, 4.47544570e+13, 5.35939125e+12, 5.35939125e+12,\n","       2.60843598e+00]))]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lin_reg = sm.OLS(df_enc_nonull['BHP'], df_enc_nonull[feature_cols])\n","results = lin_reg.fit()\n","\n","results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":807},"id":"y0IN8WmCE0HP","executionInfo":{"status":"ok","timestamp":1676238434963,"user_tz":0,"elapsed":124,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"87d5ca41-c7cd-469c-d9dd-f7a3c5b90145"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                    BHP   R-squared:                       0.810\n","Model:                            OLS   Adj. R-squared:                  0.810\n","Method:                 Least Squares   F-statistic:                     3787.\n","Date:                Sun, 12 Feb 2023   Prob (F-statistic):               0.00\n","Time:                        21:47:11   Log-Likelihood:                -60338.\n","No. Observations:               12454   AIC:                         1.207e+05\n","Df Residuals:                   12439   BIC:                         1.208e+05\n","Df Model:                          14                                         \n","Covariance Type:            nonrobust                                         \n","==============================================================================================\n","                                 coef    std err          t      P>|t|      [0.025      0.975]\n","----------------------------------------------------------------------------------------------\n","engine                       126.0725      0.648    194.624      0.000     124.803     127.342\n","body_Convertible            -928.2391     40.811    -22.745      0.000   -1008.235    -848.243\n","body_Coupe                  -926.2257     40.934    -22.628      0.000   -1006.462    -845.990\n","body_Estate                 -938.6985     40.977    -22.908      0.000   -1019.020    -858.377\n","body_Hatchback              -937.6158     41.017    -22.859      0.000   -1018.016    -857.216\n","body_MPV                    -942.3852     40.988    -22.992      0.000   -1022.728    -862.043\n","body_SUV                    -939.1131     40.988    -22.912      0.000   -1019.455    -858.771\n","body_Saloon                 -935.3088     40.983    -22.822      0.000   -1015.641    -854.976\n","fuel_Diesel                -1124.0874     47.746    -23.543      0.000   -1217.677   -1030.498\n","fuel_Diesel Hybrid         -1121.2042     48.146    -23.288      0.000   -1215.577   -1026.831\n","fuel_Electric              -1010.5903     54.623    -18.501      0.000   -1117.660    -903.521\n","fuel_Petrol                -1098.6213     47.896    -22.938      0.000   -1192.505   -1004.737\n","fuel_Petrol Hybrid         -1112.5571     48.272    -23.047      0.000   -1207.178   -1017.936\n","fuel_Petrol Plug-in Hybrid -1080.5261     47.913    -22.552      0.000   -1174.443    -986.610\n","trans_Automatic            -3270.0612    143.434    -22.798      0.000   -3551.215   -2988.907\n","trans_Manual               -3277.5252    143.196    -22.888      0.000   -3558.212   -2996.839\n","C.year                         2.6050      0.115     22.696      0.000       2.380       2.830\n","==============================================================================\n","Omnibus:                     2653.442   Durbin-Watson:                   1.166\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):             9476.498\n","Skew:                           1.046   Prob(JB):                         0.00\n","Kurtosis:                       6.726   Cond. No.                     4.91e+18\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The smallest eigenvalue is 2.1e-27. This might indicate that there are\n","strong multicollinearity problems or that the design matrix is singular.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>           <td>BHP</td>       <th>  R-squared:         </th> <td>   0.810</td> \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.810</td> \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   3787.</td> \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Sun, 12 Feb 2023</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td>  \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>21:47:11</td>     <th>  Log-Likelihood:    </th> <td> -60338.</td> \n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 12454</td>      <th>  AIC:               </th> <td>1.207e+05</td>\n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 12439</td>      <th>  BIC:               </th> <td>1.208e+05</td>\n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    14</td>      <th>                     </th>     <td> </td>    \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","               <td></td>                 <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>engine</th>                     <td>  126.0725</td> <td>    0.648</td> <td>  194.624</td> <td> 0.000</td> <td>  124.803</td> <td>  127.342</td>\n","</tr>\n","<tr>\n","  <th>body_Convertible</th>           <td> -928.2391</td> <td>   40.811</td> <td>  -22.745</td> <td> 0.000</td> <td>-1008.235</td> <td> -848.243</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                 <td> -926.2257</td> <td>   40.934</td> <td>  -22.628</td> <td> 0.000</td> <td>-1006.462</td> <td> -845.990</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                <td> -938.6985</td> <td>   40.977</td> <td>  -22.908</td> <td> 0.000</td> <td>-1019.020</td> <td> -858.377</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>             <td> -937.6158</td> <td>   41.017</td> <td>  -22.859</td> <td> 0.000</td> <td>-1018.016</td> <td> -857.216</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                   <td> -942.3852</td> <td>   40.988</td> <td>  -22.992</td> <td> 0.000</td> <td>-1022.728</td> <td> -862.043</td>\n","</tr>\n","<tr>\n","  <th>body_SUV</th>                   <td> -939.1131</td> <td>   40.988</td> <td>  -22.912</td> <td> 0.000</td> <td>-1019.455</td> <td> -858.771</td>\n","</tr>\n","<tr>\n","  <th>body_Saloon</th>                <td> -935.3088</td> <td>   40.983</td> <td>  -22.822</td> <td> 0.000</td> <td>-1015.641</td> <td> -854.976</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel</th>                <td>-1124.0874</td> <td>   47.746</td> <td>  -23.543</td> <td> 0.000</td> <td>-1217.677</td> <td>-1030.498</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>         <td>-1121.2042</td> <td>   48.146</td> <td>  -23.288</td> <td> 0.000</td> <td>-1215.577</td> <td>-1026.831</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>              <td>-1010.5903</td> <td>   54.623</td> <td>  -18.501</td> <td> 0.000</td> <td>-1117.660</td> <td> -903.521</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                <td>-1098.6213</td> <td>   47.896</td> <td>  -22.938</td> <td> 0.000</td> <td>-1192.505</td> <td>-1004.737</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>         <td>-1112.5571</td> <td>   48.272</td> <td>  -23.047</td> <td> 0.000</td> <td>-1207.178</td> <td>-1017.936</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th> <td>-1080.5261</td> <td>   47.913</td> <td>  -22.552</td> <td> 0.000</td> <td>-1174.443</td> <td> -986.610</td>\n","</tr>\n","<tr>\n","  <th>trans_Automatic</th>            <td>-3270.0612</td> <td>  143.434</td> <td>  -22.798</td> <td> 0.000</td> <td>-3551.215</td> <td>-2988.907</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>               <td>-3277.5252</td> <td>  143.196</td> <td>  -22.888</td> <td> 0.000</td> <td>-3558.212</td> <td>-2996.839</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                     <td>    2.6050</td> <td>    0.115</td> <td>   22.696</td> <td> 0.000</td> <td>    2.380</td> <td>    2.830</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>2653.442</td> <th>  Durbin-Watson:     </th> <td>   1.166</td>\n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>9476.498</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 1.046</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td> 6.726</td>  <th>  Cond. No.          </th> <td>4.91e+18</td>\n","</tr>\n","</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 2.1e-27. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["Replace the BHP null values with predicted BHP values"],"metadata":{"id":"v6C_fR01MmO7"}},{"cell_type":"code","source":["# Create a DF of the predicted BHP values, for rows where BHP is null\n","BHP_null_predict = pd.DataFrame(lin_model.predict(df_enc_body_fuel_trans[df_enc_body_fuel_trans['BHP'].isnull()][feature_cols])[:,0])\n","# Get the indexes of all the null BHP values\n","BHP_null_idx = df[df['BHP'].isnull()][['BHP']].index\n","# Set index of predicted values to match the index of BHP nulls, also squeeze it to use in 'fillna'\n","BHP_null_predict = BHP_null_predict.set_index(BHP_null_idx).squeeze()\n","# In the BHP column replace null values with the predictions\n","df['BHP'] = df['BHP'].fillna(BHP_null_predict)\n","\n","# Get the modes of owner from year\n","owner_modes = df[['C.year','owners']].groupby('C.year').agg(pd.Series.mode)\n","## Merge the two data frames. \n","df = df.merge(owner_modes, how='left', left_on=['C.year',], right_on=['C.year'])\n","# Drop ULEZ column all together\n","df= df.drop(['owners_x'], axis=1)\n","df.rename(columns={'owners_y':'owners'}, inplace=True)\n","# Remove null values form engine for now\n","df = df.dropna(subset=['engine']).reset_index(drop=True)\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KpXUo963B-8B","executionInfo":{"status":"ok","timestamp":1676238941517,"user_tz":0,"elapsed":371,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"de91c57e-1c9f-4814-8e7f-ac76c05fcc7c"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index           0\n","name            0\n","price           0\n","mileage         0\n","BHP             0\n","transmission    0\n","fuel            0\n","body            0\n","engine          0\n","C.year          0\n","C.reg           0\n","owners          0\n","dtype: int64"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["sns.pairplot(df[['engine','BHP']])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"id":"lw78sgBiLW4U","executionInfo":{"status":"ok","timestamp":1676238952843,"user_tz":0,"elapsed":3785,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"8b9e75f2-691c-4ce6-998c-282a60360c35"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 360x360 with 6 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from statsmodels.stats.outliers_influence import variance_inflation_factor # a module to evaluate the variance inflation factor (VIF)\n","feature_cols = ['mileage', 'BHP', 'engine', 'C.year',\n","       'owners']\n","\n","## We can create an indexed list (a series) where we list the VIF of each of the columns. Note the use of '.shape' in the second part of the loop\n","pd.Series([variance_inflation_factor(df[feature_cols].values, i) for i in range(df[feature_cols].shape[1])], index = df[feature_cols].columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6QZEj8-en5hK","executionInfo":{"status":"ok","timestamp":1676239012515,"user_tz":0,"elapsed":331,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"1299d725-1483-43ef-9a03-f627882c3155"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mileage      4.559480\n","BHP         78.945191\n","engine     147.117637\n","C.year      26.879515\n","owners      14.340081\n","dtype: float64"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["scaler = StandardScaler()\n","scale_cols = ['mileage', 'BHP', 'owners', 'engine', 'C.year']\n","X_train_scaled = df\n","X_train_scaled[scale_cols] = scaler.fit_transform(X_train_scaled[scale_cols])\n"],"metadata":{"id":"Ebg9zRJLnjKn","executionInfo":{"status":"ok","timestamp":1676239022193,"user_tz":0,"elapsed":323,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["sns.pairplot(df[['engine','BHP']])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"id":"Z37JiljYnqNS","executionInfo":{"status":"ok","timestamp":1676238829592,"user_tz":0,"elapsed":2939,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"4c912b78-d7af-427e-c6a2-80cdaf7ae3a7"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 360x360 with 6 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from statsmodels.stats.outliers_influence import variance_inflation_factor # a module to evaluate the variance inflation factor (VIF)\n","feature_cols = ['mileage', 'BHP', 'engine', 'C.year',\n","       'owners']\n","\n","## We can create an indexed list (a series) where we list the VIF of each of the columns. Note the use of '.shape' in the second part of the loop\n","pd.Series([variance_inflation_factor(df[feature_cols].values, i) for i in range(df[feature_cols].shape[1])], index = df[feature_cols].columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bPp75uNgodUU","executionInfo":{"status":"ok","timestamp":1676239046067,"user_tz":0,"elapsed":277,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"cabcf1d5-c95a-4f50-b105-cd057889e673"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mileage    2.118650\n","BHP        9.230911\n","engine     9.346885\n","C.year     3.347563\n","owners     1.836353\n","dtype: float64"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["### Predicting price with linear regression\n","\n","Nearly all the columns can be used for features"],"metadata":{"id":"lz2QbQy5M_GT"}},{"cell_type":"code","source":["df_enc_body = pd.get_dummies(df, columns = ['body'], drop_first = False, prefix = 'body')\n","df_enc_body_fuel = pd.get_dummies(df_enc_body, columns = ['fuel'], drop_first = True, prefix = 'fuel')\n","df_enc_body_fuel_trans = pd.get_dummies(df_enc_body_fuel, columns = ['transmission'], drop_first = True, prefix = 'trans')\n","df_enc_full = pd.get_dummies(df_enc_body_fuel_trans, columns = ['name'], drop_first = False, prefix = 'name')\n","#df_enc_full.columns"],"metadata":{"id":"oOcLs6T8KBWg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Creating output dataset for function\n","features_full = ['mileage', 'BHP', 'engine', 'C.year',\n","       'owners', 'body_Convertible', 'body_Coupe', 'body_Estate',\n","       'body_Hatchback', 'body_MPV', 'body_SUV', 'body_Saloon',\n","       'fuel_Diesel Hybrid', 'fuel_Electric', 'fuel_Petrol',\n","       'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid', 'trans_Manual',\n","       'name_BMW_1 Series', 'name_BMW_2 Series',\n","       'name_BMW_2 Series Active Tourer', 'name_BMW_2 Series Gran Coupe',\n","       'name_BMW_3 Series', 'name_BMW_4 Series',\n","       'name_BMW_4 Series Gran Coupe', 'name_BMW_5 Series',\n","       'name_BMW_7 Series', 'name_BMW_I3', 'name_BMW_M3', 'name_BMW_M4',\n","       'name_BMW_X1', 'name_BMW_X2', 'name_BMW_X3', 'name_BMW_X5',\n","       'name_BMW_X6', 'name_BMW_Z4']\n","\n","feature_cols = features_full\n","\n","X = df_enc_full[feature_cols]\n","y = np.log(df_enc_full['price'])\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","df_out = X_train\n","df_out['price'] = y_train\n","\n","path = '/content/drive/My Drive/output.csv'\n","with open(path, 'w', encoding = 'utf-8-sig') as f:  \n","    df_out.to_csv(f)"],"metadata":{"id":"gbWy2dXSFlad"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = df_enc_full[features_full]\n","y = df_enc_full['price']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","scaler = StandardScaler()\n","scale_cols = ['mileage', 'BHP', 'owners', 'engine', 'C.year']\n","X_train_scaled = X_train\n","X_train_scaled[scale_cols] = scaler.fit_transform(X_train_scaled[scale_cols])\n","\n","lin_reg = sm.OLS(y_train, X_train_scaled[feature_cols])\n","results = lin_reg.fit()\n","X_train_scaled['y_pred'] = results.predict(X_train_scaled[feature_cols])\n","\n","rmse = statsmodels.tools.eval_measures.rmse(y_train, X_train_scaled['y_pred'])\n","print(rmse)\n","results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"bGvousUsX-JK","executionInfo":{"status":"ok","timestamp":1676034786656,"user_tz":0,"elapsed":748,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"9051f31d-14c9-467a-82c8-f8b2ed05ffaa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4129.929977885785\n"]},{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                  price   R-squared:                       0.870\n","Model:                            OLS   Adj. R-squared:                  0.870\n","Method:                 Least Squares   F-statistic:                     4757.\n","Date:                Fri, 10 Feb 2023   Prob (F-statistic):               0.00\n","Time:                        13:13:06   Log-Likelihood:            -2.2834e+05\n","No. Observations:               23432   AIC:                         4.568e+05\n","Df Residuals:                   23398   BIC:                         4.570e+05\n","Df Model:                          33                                         \n","Covariance Type:            nonrobust                                         \n","===================================================================================================\n","                                      coef    std err          t      P>|t|      [0.025      0.975]\n","---------------------------------------------------------------------------------------------------\n","mileage                         -2864.2096     42.156    -67.943      0.000   -2946.838   -2781.581\n","BHP                              1328.5041    111.027     11.966      0.000    1110.884    1546.124\n","engine                            962.6384    107.750      8.934      0.000     751.442    1173.835\n","C.year                           7374.0124     55.442    133.004      0.000    7265.342    7482.683\n","owners                           1607.6363     38.299     41.976      0.000    1532.569    1682.704\n","body_Convertible                 1.397e+04    461.179     30.300      0.000    1.31e+04    1.49e+04\n","body_Coupe                       1.444e+04    459.798     31.403      0.000    1.35e+04    1.53e+04\n","body_Estate                      1.506e+04    471.823     31.916      0.000    1.41e+04     1.6e+04\n","body_Hatchback                   1.059e+04    482.873     21.924      0.000    9639.855    1.15e+04\n","body_MPV                         1.504e+04   3702.632      4.062      0.000    7782.811    2.23e+04\n","body_SUV                         1.913e+04     67.151    284.810      0.000     1.9e+04    1.93e+04\n","body_Saloon                      1.364e+04    464.816     29.345      0.000    1.27e+04    1.46e+04\n","fuel_Diesel Hybrid               5254.5625    175.415     29.955      0.000    4910.737    5598.388\n","fuel_Electric                    1649.2578   3088.825      0.534      0.593   -4405.041    7703.557\n","fuel_Petrol                       272.1341     77.816      3.497      0.000     119.610     424.658\n","fuel_Petrol Hybrid               6915.4546    288.325     23.985      0.000    6350.318    7480.591\n","fuel_Petrol Plug-in Hybrid       2727.3366    142.630     19.122      0.000    2447.772    3006.901\n","trans_Manual                     -635.2353     77.002     -8.250      0.000    -786.165    -484.306\n","name_BMW_1 Series                5784.9968    479.925     12.054      0.000    4844.313    6725.681\n","name_BMW_2 Series                 712.3673    468.679      1.520      0.129    -206.274    1631.009\n","name_BMW_2 Series Active Tourer -1701.8462   3706.632     -0.459      0.646   -8967.087    5563.395\n","name_BMW_2 Series Gran Coupe     4616.9315    539.451      8.559      0.000    3559.573    5674.290\n","name_BMW_3 Series                4405.6205    462.831      9.519      0.000    3498.442    5312.799\n","name_BMW_4 Series                3983.9431    466.063      8.548      0.000    3070.430    4897.456\n","name_BMW_4 Series Gran Coupe     6560.0276    502.718     13.049      0.000    5574.668    7545.387\n","name_BMW_5 Series                5193.4676    470.015     11.050      0.000    4272.208    6114.727\n","name_BMW_7 Series                1.109e+04    511.464     21.677      0.000    1.01e+04    1.21e+04\n","name_BMW_I3                      4021.8954   1923.388      2.091      0.037     251.928    7791.862\n","name_BMW_M3                      1.767e+04    505.676     34.936      0.000    1.67e+04    1.87e+04\n","name_BMW_M4                      1.423e+04    492.418     28.891      0.000    1.33e+04    1.52e+04\n","name_BMW_X1                     -1174.3018    120.369     -9.756      0.000   -1410.232    -938.371\n","name_BMW_X2                     -2109.1802    194.674    -10.834      0.000   -2490.755   -1727.606\n","name_BMW_X3                      3529.0409    119.870     29.441      0.000    3294.088    3763.994\n","name_BMW_X5                      9657.0156    113.307     85.229      0.000    9434.926    9879.105\n","name_BMW_X6                      9222.7091    195.145     47.261      0.000    8840.211    9605.207\n","name_BMW_Z4                      6181.1047    492.871     12.541      0.000    5215.046    7147.163\n","==============================================================================\n","Omnibus:                    16087.869   Durbin-Watson:                   1.995\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):           953473.556\n","Skew:                           2.663   Prob(JB):                         0.00\n","Kurtosis:                      33.793   Cond. No.                     1.31e+16\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The smallest eigenvalue is 3.06e-28. This might indicate that there are\n","strong multicollinearity problems or that the design matrix is singular.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared:         </th>  <td>   0.870</td>  \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.870</td>  \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   4757.</td>  \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Fri, 10 Feb 2023</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>13:13:06</td>     <th>  Log-Likelihood:    </th> <td>-2.2834e+05</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 23432</td>      <th>  AIC:               </th>  <td>4.568e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 23398</td>      <th>  BIC:               </th>  <td>4.570e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    33</td>      <th>                     </th>      <td> </td>     \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                 <td></td>                    <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>mileage</th>                         <td>-2864.2096</td> <td>   42.156</td> <td>  -67.943</td> <td> 0.000</td> <td>-2946.838</td> <td>-2781.581</td>\n","</tr>\n","<tr>\n","  <th>BHP</th>                             <td> 1328.5041</td> <td>  111.027</td> <td>   11.966</td> <td> 0.000</td> <td> 1110.884</td> <td> 1546.124</td>\n","</tr>\n","<tr>\n","  <th>engine</th>                          <td>  962.6384</td> <td>  107.750</td> <td>    8.934</td> <td> 0.000</td> <td>  751.442</td> <td> 1173.835</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                          <td> 7374.0124</td> <td>   55.442</td> <td>  133.004</td> <td> 0.000</td> <td> 7265.342</td> <td> 7482.683</td>\n","</tr>\n","<tr>\n","  <th>owners</th>                          <td> 1607.6363</td> <td>   38.299</td> <td>   41.976</td> <td> 0.000</td> <td> 1532.569</td> <td> 1682.704</td>\n","</tr>\n","<tr>\n","  <th>body_Convertible</th>                <td> 1.397e+04</td> <td>  461.179</td> <td>   30.300</td> <td> 0.000</td> <td> 1.31e+04</td> <td> 1.49e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                      <td> 1.444e+04</td> <td>  459.798</td> <td>   31.403</td> <td> 0.000</td> <td> 1.35e+04</td> <td> 1.53e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                     <td> 1.506e+04</td> <td>  471.823</td> <td>   31.916</td> <td> 0.000</td> <td> 1.41e+04</td> <td>  1.6e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>                  <td> 1.059e+04</td> <td>  482.873</td> <td>   21.924</td> <td> 0.000</td> <td> 9639.855</td> <td> 1.15e+04</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                        <td> 1.504e+04</td> <td> 3702.632</td> <td>    4.062</td> <td> 0.000</td> <td> 7782.811</td> <td> 2.23e+04</td>\n","</tr>\n","<tr>\n","  <th>body_SUV</th>                        <td> 1.913e+04</td> <td>   67.151</td> <td>  284.810</td> <td> 0.000</td> <td>  1.9e+04</td> <td> 1.93e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Saloon</th>                     <td> 1.364e+04</td> <td>  464.816</td> <td>   29.345</td> <td> 0.000</td> <td> 1.27e+04</td> <td> 1.46e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>              <td> 5254.5625</td> <td>  175.415</td> <td>   29.955</td> <td> 0.000</td> <td> 4910.737</td> <td> 5598.388</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>                   <td> 1649.2578</td> <td> 3088.825</td> <td>    0.534</td> <td> 0.593</td> <td>-4405.041</td> <td> 7703.557</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                     <td>  272.1341</td> <td>   77.816</td> <td>    3.497</td> <td> 0.000</td> <td>  119.610</td> <td>  424.658</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>              <td> 6915.4546</td> <td>  288.325</td> <td>   23.985</td> <td> 0.000</td> <td> 6350.318</td> <td> 7480.591</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th>      <td> 2727.3366</td> <td>  142.630</td> <td>   19.122</td> <td> 0.000</td> <td> 2447.772</td> <td> 3006.901</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>                    <td> -635.2353</td> <td>   77.002</td> <td>   -8.250</td> <td> 0.000</td> <td> -786.165</td> <td> -484.306</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_1 Series</th>               <td> 5784.9968</td> <td>  479.925</td> <td>   12.054</td> <td> 0.000</td> <td> 4844.313</td> <td> 6725.681</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series</th>               <td>  712.3673</td> <td>  468.679</td> <td>    1.520</td> <td> 0.129</td> <td> -206.274</td> <td> 1631.009</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series Active Tourer</th> <td>-1701.8462</td> <td> 3706.632</td> <td>   -0.459</td> <td> 0.646</td> <td>-8967.087</td> <td> 5563.395</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series Gran Coupe</th>    <td> 4616.9315</td> <td>  539.451</td> <td>    8.559</td> <td> 0.000</td> <td> 3559.573</td> <td> 5674.290</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_3 Series</th>               <td> 4405.6205</td> <td>  462.831</td> <td>    9.519</td> <td> 0.000</td> <td> 3498.442</td> <td> 5312.799</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series</th>               <td> 3983.9431</td> <td>  466.063</td> <td>    8.548</td> <td> 0.000</td> <td> 3070.430</td> <td> 4897.456</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series Gran Coupe</th>    <td> 6560.0276</td> <td>  502.718</td> <td>   13.049</td> <td> 0.000</td> <td> 5574.668</td> <td> 7545.387</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_5 Series</th>               <td> 5193.4676</td> <td>  470.015</td> <td>   11.050</td> <td> 0.000</td> <td> 4272.208</td> <td> 6114.727</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_7 Series</th>               <td> 1.109e+04</td> <td>  511.464</td> <td>   21.677</td> <td> 0.000</td> <td> 1.01e+04</td> <td> 1.21e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_I3</th>                     <td> 4021.8954</td> <td> 1923.388</td> <td>    2.091</td> <td> 0.037</td> <td>  251.928</td> <td> 7791.862</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M3</th>                     <td> 1.767e+04</td> <td>  505.676</td> <td>   34.936</td> <td> 0.000</td> <td> 1.67e+04</td> <td> 1.87e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M4</th>                     <td> 1.423e+04</td> <td>  492.418</td> <td>   28.891</td> <td> 0.000</td> <td> 1.33e+04</td> <td> 1.52e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X1</th>                     <td>-1174.3018</td> <td>  120.369</td> <td>   -9.756</td> <td> 0.000</td> <td>-1410.232</td> <td> -938.371</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X2</th>                     <td>-2109.1802</td> <td>  194.674</td> <td>  -10.834</td> <td> 0.000</td> <td>-2490.755</td> <td>-1727.606</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X3</th>                     <td> 3529.0409</td> <td>  119.870</td> <td>   29.441</td> <td> 0.000</td> <td> 3294.088</td> <td> 3763.994</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X5</th>                     <td> 9657.0156</td> <td>  113.307</td> <td>   85.229</td> <td> 0.000</td> <td> 9434.926</td> <td> 9879.105</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X6</th>                     <td> 9222.7091</td> <td>  195.145</td> <td>   47.261</td> <td> 0.000</td> <td> 8840.211</td> <td> 9605.207</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_Z4</th>                     <td> 6181.1047</td> <td>  492.871</td> <td>   12.541</td> <td> 0.000</td> <td> 5215.046</td> <td> 7147.163</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>16087.869</td> <th>  Durbin-Watson:     </th>  <td>   1.995</td> \n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>953473.556</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 2.663</td>   <th>  Prob(JB):          </th>  <td>    0.00</td> \n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td>33.793</td>   <th>  Cond. No.          </th>  <td>1.31e+16</td> \n","</tr>\n","</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 3.06e-28. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["X_test_scaled = X_test\n","X_test_scaled[scale_cols] = scaler.transform(X_test_scaled[scale_cols])\n","\n","## Now we predict using the X_test set! \n","X_test_scaled['y_pred'] = results.predict(X_test_scaled[feature_cols])\n","rmse = statsmodels.tools.eval_measures.rmse(y_test, X_test_scaled['y_pred'])\n","print(rmse)\n","\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = y_test)\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = X_test_scaled['y_pred'])\n","plt.show()\n","results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"NNm5f05uZhk0","executionInfo":{"status":"ok","timestamp":1676034819654,"user_tz":0,"elapsed":780,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"7c933506-f66b-4724-f104-14f292587a0b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4060754.477468625\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                  price   R-squared:                       0.870\n","Model:                            OLS   Adj. R-squared:                  0.870\n","Method:                 Least Squares   F-statistic:                     4757.\n","Date:                Fri, 10 Feb 2023   Prob (F-statistic):               0.00\n","Time:                        13:13:39   Log-Likelihood:            -2.2834e+05\n","No. Observations:               23432   AIC:                         4.568e+05\n","Df Residuals:                   23398   BIC:                         4.570e+05\n","Df Model:                          33                                         \n","Covariance Type:            nonrobust                                         \n","===================================================================================================\n","                                      coef    std err          t      P>|t|      [0.025      0.975]\n","---------------------------------------------------------------------------------------------------\n","mileage                         -2864.2096     42.156    -67.943      0.000   -2946.838   -2781.581\n","BHP                              1328.5041    111.027     11.966      0.000    1110.884    1546.124\n","engine                            962.6384    107.750      8.934      0.000     751.442    1173.835\n","C.year                           7374.0124     55.442    133.004      0.000    7265.342    7482.683\n","owners                           1607.6363     38.299     41.976      0.000    1532.569    1682.704\n","body_Convertible                 1.397e+04    461.179     30.300      0.000    1.31e+04    1.49e+04\n","body_Coupe                       1.444e+04    459.798     31.403      0.000    1.35e+04    1.53e+04\n","body_Estate                      1.506e+04    471.823     31.916      0.000    1.41e+04     1.6e+04\n","body_Hatchback                   1.059e+04    482.873     21.924      0.000    9639.855    1.15e+04\n","body_MPV                         1.504e+04   3702.632      4.062      0.000    7782.811    2.23e+04\n","body_SUV                         1.913e+04     67.151    284.810      0.000     1.9e+04    1.93e+04\n","body_Saloon                      1.364e+04    464.816     29.345      0.000    1.27e+04    1.46e+04\n","fuel_Diesel Hybrid               5254.5625    175.415     29.955      0.000    4910.737    5598.388\n","fuel_Electric                    1649.2578   3088.825      0.534      0.593   -4405.041    7703.557\n","fuel_Petrol                       272.1341     77.816      3.497      0.000     119.610     424.658\n","fuel_Petrol Hybrid               6915.4546    288.325     23.985      0.000    6350.318    7480.591\n","fuel_Petrol Plug-in Hybrid       2727.3366    142.630     19.122      0.000    2447.772    3006.901\n","trans_Manual                     -635.2353     77.002     -8.250      0.000    -786.165    -484.306\n","name_BMW_1 Series                5784.9968    479.925     12.054      0.000    4844.313    6725.681\n","name_BMW_2 Series                 712.3673    468.679      1.520      0.129    -206.274    1631.009\n","name_BMW_2 Series Active Tourer -1701.8462   3706.632     -0.459      0.646   -8967.087    5563.395\n","name_BMW_2 Series Gran Coupe     4616.9315    539.451      8.559      0.000    3559.573    5674.290\n","name_BMW_3 Series                4405.6205    462.831      9.519      0.000    3498.442    5312.799\n","name_BMW_4 Series                3983.9431    466.063      8.548      0.000    3070.430    4897.456\n","name_BMW_4 Series Gran Coupe     6560.0276    502.718     13.049      0.000    5574.668    7545.387\n","name_BMW_5 Series                5193.4676    470.015     11.050      0.000    4272.208    6114.727\n","name_BMW_7 Series                1.109e+04    511.464     21.677      0.000    1.01e+04    1.21e+04\n","name_BMW_I3                      4021.8954   1923.388      2.091      0.037     251.928    7791.862\n","name_BMW_M3                      1.767e+04    505.676     34.936      0.000    1.67e+04    1.87e+04\n","name_BMW_M4                      1.423e+04    492.418     28.891      0.000    1.33e+04    1.52e+04\n","name_BMW_X1                     -1174.3018    120.369     -9.756      0.000   -1410.232    -938.371\n","name_BMW_X2                     -2109.1802    194.674    -10.834      0.000   -2490.755   -1727.606\n","name_BMW_X3                      3529.0409    119.870     29.441      0.000    3294.088    3763.994\n","name_BMW_X5                      9657.0156    113.307     85.229      0.000    9434.926    9879.105\n","name_BMW_X6                      9222.7091    195.145     47.261      0.000    8840.211    9605.207\n","name_BMW_Z4                      6181.1047    492.871     12.541      0.000    5215.046    7147.163\n","==============================================================================\n","Omnibus:                    16087.869   Durbin-Watson:                   1.995\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):           953473.556\n","Skew:                           2.663   Prob(JB):                         0.00\n","Kurtosis:                      33.793   Cond. No.                     1.31e+16\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The smallest eigenvalue is 3.06e-28. This might indicate that there are\n","strong multicollinearity problems or that the design matrix is singular.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared:         </th>  <td>   0.870</td>  \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.870</td>  \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   4757.</td>  \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Fri, 10 Feb 2023</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>13:13:39</td>     <th>  Log-Likelihood:    </th> <td>-2.2834e+05</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 23432</td>      <th>  AIC:               </th>  <td>4.568e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 23398</td>      <th>  BIC:               </th>  <td>4.570e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    33</td>      <th>                     </th>      <td> </td>     \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                 <td></td>                    <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>mileage</th>                         <td>-2864.2096</td> <td>   42.156</td> <td>  -67.943</td> <td> 0.000</td> <td>-2946.838</td> <td>-2781.581</td>\n","</tr>\n","<tr>\n","  <th>BHP</th>                             <td> 1328.5041</td> <td>  111.027</td> <td>   11.966</td> <td> 0.000</td> <td> 1110.884</td> <td> 1546.124</td>\n","</tr>\n","<tr>\n","  <th>engine</th>                          <td>  962.6384</td> <td>  107.750</td> <td>    8.934</td> <td> 0.000</td> <td>  751.442</td> <td> 1173.835</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                          <td> 7374.0124</td> <td>   55.442</td> <td>  133.004</td> <td> 0.000</td> <td> 7265.342</td> <td> 7482.683</td>\n","</tr>\n","<tr>\n","  <th>owners</th>                          <td> 1607.6363</td> <td>   38.299</td> <td>   41.976</td> <td> 0.000</td> <td> 1532.569</td> <td> 1682.704</td>\n","</tr>\n","<tr>\n","  <th>body_Convertible</th>                <td> 1.397e+04</td> <td>  461.179</td> <td>   30.300</td> <td> 0.000</td> <td> 1.31e+04</td> <td> 1.49e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                      <td> 1.444e+04</td> <td>  459.798</td> <td>   31.403</td> <td> 0.000</td> <td> 1.35e+04</td> <td> 1.53e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                     <td> 1.506e+04</td> <td>  471.823</td> <td>   31.916</td> <td> 0.000</td> <td> 1.41e+04</td> <td>  1.6e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>                  <td> 1.059e+04</td> <td>  482.873</td> <td>   21.924</td> <td> 0.000</td> <td> 9639.855</td> <td> 1.15e+04</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                        <td> 1.504e+04</td> <td> 3702.632</td> <td>    4.062</td> <td> 0.000</td> <td> 7782.811</td> <td> 2.23e+04</td>\n","</tr>\n","<tr>\n","  <th>body_SUV</th>                        <td> 1.913e+04</td> <td>   67.151</td> <td>  284.810</td> <td> 0.000</td> <td>  1.9e+04</td> <td> 1.93e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Saloon</th>                     <td> 1.364e+04</td> <td>  464.816</td> <td>   29.345</td> <td> 0.000</td> <td> 1.27e+04</td> <td> 1.46e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>              <td> 5254.5625</td> <td>  175.415</td> <td>   29.955</td> <td> 0.000</td> <td> 4910.737</td> <td> 5598.388</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>                   <td> 1649.2578</td> <td> 3088.825</td> <td>    0.534</td> <td> 0.593</td> <td>-4405.041</td> <td> 7703.557</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                     <td>  272.1341</td> <td>   77.816</td> <td>    3.497</td> <td> 0.000</td> <td>  119.610</td> <td>  424.658</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>              <td> 6915.4546</td> <td>  288.325</td> <td>   23.985</td> <td> 0.000</td> <td> 6350.318</td> <td> 7480.591</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th>      <td> 2727.3366</td> <td>  142.630</td> <td>   19.122</td> <td> 0.000</td> <td> 2447.772</td> <td> 3006.901</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>                    <td> -635.2353</td> <td>   77.002</td> <td>   -8.250</td> <td> 0.000</td> <td> -786.165</td> <td> -484.306</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_1 Series</th>               <td> 5784.9968</td> <td>  479.925</td> <td>   12.054</td> <td> 0.000</td> <td> 4844.313</td> <td> 6725.681</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series</th>               <td>  712.3673</td> <td>  468.679</td> <td>    1.520</td> <td> 0.129</td> <td> -206.274</td> <td> 1631.009</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series Active Tourer</th> <td>-1701.8462</td> <td> 3706.632</td> <td>   -0.459</td> <td> 0.646</td> <td>-8967.087</td> <td> 5563.395</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series Gran Coupe</th>    <td> 4616.9315</td> <td>  539.451</td> <td>    8.559</td> <td> 0.000</td> <td> 3559.573</td> <td> 5674.290</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_3 Series</th>               <td> 4405.6205</td> <td>  462.831</td> <td>    9.519</td> <td> 0.000</td> <td> 3498.442</td> <td> 5312.799</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series</th>               <td> 3983.9431</td> <td>  466.063</td> <td>    8.548</td> <td> 0.000</td> <td> 3070.430</td> <td> 4897.456</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series Gran Coupe</th>    <td> 6560.0276</td> <td>  502.718</td> <td>   13.049</td> <td> 0.000</td> <td> 5574.668</td> <td> 7545.387</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_5 Series</th>               <td> 5193.4676</td> <td>  470.015</td> <td>   11.050</td> <td> 0.000</td> <td> 4272.208</td> <td> 6114.727</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_7 Series</th>               <td> 1.109e+04</td> <td>  511.464</td> <td>   21.677</td> <td> 0.000</td> <td> 1.01e+04</td> <td> 1.21e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_I3</th>                     <td> 4021.8954</td> <td> 1923.388</td> <td>    2.091</td> <td> 0.037</td> <td>  251.928</td> <td> 7791.862</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M3</th>                     <td> 1.767e+04</td> <td>  505.676</td> <td>   34.936</td> <td> 0.000</td> <td> 1.67e+04</td> <td> 1.87e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M4</th>                     <td> 1.423e+04</td> <td>  492.418</td> <td>   28.891</td> <td> 0.000</td> <td> 1.33e+04</td> <td> 1.52e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X1</th>                     <td>-1174.3018</td> <td>  120.369</td> <td>   -9.756</td> <td> 0.000</td> <td>-1410.232</td> <td> -938.371</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X2</th>                     <td>-2109.1802</td> <td>  194.674</td> <td>  -10.834</td> <td> 0.000</td> <td>-2490.755</td> <td>-1727.606</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X3</th>                     <td> 3529.0409</td> <td>  119.870</td> <td>   29.441</td> <td> 0.000</td> <td> 3294.088</td> <td> 3763.994</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X5</th>                     <td> 9657.0156</td> <td>  113.307</td> <td>   85.229</td> <td> 0.000</td> <td> 9434.926</td> <td> 9879.105</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X6</th>                     <td> 9222.7091</td> <td>  195.145</td> <td>   47.261</td> <td> 0.000</td> <td> 8840.211</td> <td> 9605.207</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_Z4</th>                     <td> 6181.1047</td> <td>  492.871</td> <td>   12.541</td> <td> 0.000</td> <td> 5215.046</td> <td> 7147.163</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>16087.869</td> <th>  Durbin-Watson:     </th>  <td>   1.995</td> \n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>953473.556</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 2.663</td>   <th>  Prob(JB):          </th>  <td>    0.00</td> \n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td>33.793</td>   <th>  Cond. No.          </th>  <td>1.31e+16</td> \n","</tr>\n","</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 3.06e-28. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["Further analysis"],"metadata":{"id":"R1DRBpeoaXw8"}},{"cell_type":"code","source":["## Understanding Multi... collin... eraity more.\n","## Multicollinearity:\n","## https://en.wikipedia.org/wiki/Variance_inflation_factor\n","## https://en.wikipedia.org/wiki/Multicollinearity#:~:text=Multicollinearity%20refers%20to%20a%20situation,equal%20to%201%20or%20%E2%88%921.\n","\n","from statsmodels.stats.outliers_influence import variance_inflation_factor # a module to evaluate the variance inflation factor (VIF)\n","feature_cols = ['mileage', 'BHP', 'engine', 'C.year',\n","       'owners', 'body_Coupe', 'body_Estate', 'body_Hatchback', 'body_MPV',\n","       'body_SUV', 'body_Saloon', 'fuel_Diesel Hybrid', 'fuel_Electric',\n","       'fuel_Petrol', 'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid',\n","       'trans_Manual', 'name_BMW_2 Series', 'name_BMW_2 Series Active Tourer',\n","       'name_BMW_2 Series Gran Coupe', 'name_BMW_3 Series',\n","       'name_BMW_4 Series', 'name_BMW_4 Series Gran Coupe',\n","       'name_BMW_5 Series', 'name_BMW_7 Series', 'name_BMW_I3', 'name_BMW_M3',\n","       'name_BMW_M4', 'name_BMW_X1', 'name_BMW_X2', 'name_BMW_X3',\n","       'name_BMW_X5', 'name_BMW_X6', 'name_BMW_Z4']\n","\n","## We can create an indexed list (a series) where we list the VIF of each of the columns. Note the use of '.shape' in the second part of the loop\n","pd.Series([variance_inflation_factor(X_train[feature_cols].values, i) for i in range(X_train[feature_cols].shape[1])], index = X_train[feature_cols].columns)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qMgGRv1UaZdr","executionInfo":{"status":"ok","timestamp":1676034863014,"user_tz":0,"elapsed":3579,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"6e02b865-1c2b-4199-b557-4ee4ebbf3cce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/statsmodels/stats/outliers_influence.py:193: RuntimeWarning: divide by zero encountered in double_scalars\n","  vif = 1. / (1. - r_squared_i)\n"]},{"output_type":"execute_result","data":{"text/plain":["mileage                              2.425205\n","BHP                                 16.885026\n","engine                              15.915387\n","C.year                               4.085013\n","owners                               1.996509\n","body_Coupe                           2.604709\n","body_Estate                          4.269287\n","body_Hatchback                       2.179183\n","body_MPV                           512.857412\n","body_SUV                                  inf\n","body_Saloon                         12.441813\n","fuel_Diesel Hybrid                   1.212217\n","fuel_Electric                        1.117068\n","fuel_Petrol                          2.875355\n","fuel_Petrol Hybrid                   1.084034\n","fuel_Petrol Plug-in Hybrid           1.664370\n","trans_Manual                         1.942595\n","name_BMW_2 Series                    1.580272\n","name_BMW_2 Series Active Tourer    512.876377\n","name_BMW_2 Series Gran Coupe         1.431144\n","name_BMW_3 Series                    9.894050\n","name_BMW_4 Series                    1.765143\n","name_BMW_4 Series Gran Coupe         1.236585\n","name_BMW_5 Series                    6.252932\n","name_BMW_7 Series                    1.878135\n","name_BMW_I3                          1.134173\n","name_BMW_M3                          1.569065\n","name_BMW_M4                          1.562848\n","name_BMW_X1                               inf\n","name_BMW_X2                               inf\n","name_BMW_X3                               inf\n","name_BMW_X5                               inf\n","name_BMW_X6                               inf\n","name_BMW_Z4                          1.186450\n","dtype: float64"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["## This a piece of code from stats.stackexchange.com\n","\n","## It runs the model with all of the variables. \n","## If any of them have a higher VIF than 5, it drops the max. \n","## Then it keeps going until none of them have a higher VIF than 5.\n","## This leaves us with a nice set of features with no collineraity\n","\n","def calculate_vif(X, thresh = 5.0):\n","    variables = list(range(X.shape[1]))\n","    dropped = True\n","    while dropped:\n","        dropped = False\n","        # this bit uses list comprehension to gather all the VIF values of the different variables\n","        vif = [variance_inflation_factor(X.iloc[:, variables].values, ix)\n","               for ix in range(X.iloc[:, variables].shape[1])]\n","        \n","        maxloc = vif.index(max(vif)) # getting the index of the highest VIF value\n","        if max(vif) > thresh:\n","            print('dropping \\'' + X.iloc[:, variables].columns[maxloc] +\n","                  '\\' at index: ' + str(maxloc))\n","            del variables[maxloc] # we delete the highest VIF value on condition that it's higher than the threshold\n","            dropped = True # if we deleted anything, we set the 'dropped' value to True to stay in the while loop\n","\n","    print('Remaining variables:')\n","    print(X.columns[variables]) # finally, we print the variables that are still in our set\n","    #return X.iloc[:, variables] # and return our X cut down to the remaining variables\n","\n","calculate_vif(X_train[feature_cols])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"999pKyHGcbsk","executionInfo":{"status":"ok","timestamp":1676034885435,"user_tz":0,"elapsed":16761,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"32bfd8b6-1cc4-4dc3-830d-81b8c25836c1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dropping 'body_SUV' at index: 9\n","dropping 'name_BMW_2 Series Active Tourer' at index: 17\n","dropping 'BHP' at index: 1\n","dropping 'body_Saloon' at index: 8\n","Remaining variables:\n","Index(['mileage', 'engine', 'C.year', 'owners', 'body_Coupe', 'body_Estate',\n","       'body_Hatchback', 'body_MPV', 'fuel_Diesel Hybrid', 'fuel_Electric',\n","       'fuel_Petrol', 'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid',\n","       'trans_Manual', 'name_BMW_2 Series', 'name_BMW_2 Series Gran Coupe',\n","       'name_BMW_3 Series', 'name_BMW_4 Series',\n","       'name_BMW_4 Series Gran Coupe', 'name_BMW_5 Series',\n","       'name_BMW_7 Series', 'name_BMW_I3', 'name_BMW_M3', 'name_BMW_M4',\n","       'name_BMW_X1', 'name_BMW_X2', 'name_BMW_X3', 'name_BMW_X5',\n","       'name_BMW_X6', 'name_BMW_Z4'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["feature_cols_lowVIF = ['mileage', 'engine', 'C.year', 'owners', 'body_Coupe', 'body_Estate',\n","       'body_Hatchback', 'body_MPV', 'fuel_Diesel Hybrid', 'fuel_Electric',\n","       'fuel_Petrol', 'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid',\n","       'trans_Manual', 'name_BMW_2 Series', 'name_BMW_2 Series Gran Coupe',\n","       'name_BMW_3 Series', 'name_BMW_4 Series',\n","       'name_BMW_4 Series Gran Coupe', 'name_BMW_5 Series',\n","       'name_BMW_7 Series', 'name_BMW_I3', 'name_BMW_M3', 'name_BMW_M4',\n","       'name_BMW_X1', 'name_BMW_X2', 'name_BMW_X3', 'name_BMW_X5',\n","       'name_BMW_X6', 'name_BMW_Z4']\n","\n","X = df_enc_full[feature_cols_lowVIF]\n","y = df_enc_full['price']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","## We can create an indexed list (a series) where we list the VIF of each of the columns. Note the use of '.shape' in the second part of the loop\n","pd.Series([variance_inflation_factor(X_train[feature_cols_lowVIF].values, i) for i in range(X_train[feature_cols_lowVIF].shape[1])], index = X_train[feature_cols_lowVIF].columns)\n","lin_reg = sm.OLS(y_train, X_train[feature_cols_lowVIF])\n","results = lin_reg.fit()\n","results.summary()"],"metadata":{"id":"UtVwdRACoxsP","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1676034903748,"user_tz":0,"elapsed":2677,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"142c32ca-c3e2-4028-ee0c-2cc94c8271bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                 OLS Regression Results                                \n","=======================================================================================\n","Dep. Variable:                  price   R-squared (uncentered):                   0.940\n","Model:                            OLS   Adj. R-squared (uncentered):              0.940\n","Method:                 Least Squares   F-statistic:                          1.216e+04\n","Date:                Fri, 10 Feb 2023   Prob (F-statistic):                        0.00\n","Time:                        13:15:03   Log-Likelihood:                     -2.3550e+05\n","No. Observations:               23432   AIC:                                  4.711e+05\n","Df Residuals:                   23402   BIC:                                  4.713e+05\n","Df Model:                          30                                                  \n","Covariance Type:            nonrobust                                                  \n","================================================================================================\n","                                   coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------------------------\n","mileage                         -0.1740      0.001   -137.465      0.000      -0.177      -0.172\n","engine                        2700.4598     90.253     29.921      0.000    2523.559    2877.361\n","C.year                          11.8867      0.181     65.688      0.000      11.532      12.241\n","owners                       -2380.9148     63.436    -37.533      0.000   -2505.253   -2256.577\n","body_Coupe                     -17.7345    163.839     -0.108      0.914    -338.870     303.401\n","body_Estate                   2271.5007    150.959     15.047      0.000    1975.610    2567.391\n","body_Hatchback                1316.7962    296.099      4.447      0.000     736.422    1897.170\n","body_MPV                     -2146.1525    380.401     -5.642      0.000   -2891.764   -1400.541\n","fuel_Diesel Hybrid            1.059e+04    232.257     45.606      0.000    1.01e+04     1.1e+04\n","fuel_Electric                 9937.7340   4184.730      2.375      0.018    1735.390    1.81e+04\n","fuel_Petrol                   1184.1538     94.963     12.470      0.000     998.021    1370.287\n","fuel_Petrol Hybrid            1.132e+04    388.118     29.159      0.000    1.06e+04    1.21e+04\n","fuel_Petrol Plug-in Hybrid    7036.8792    170.976     41.157      0.000    6701.755    7372.003\n","trans_Manual                 -2316.1489    102.372    -22.625      0.000   -2516.804   -2115.494\n","name_BMW_2 Series              -62.5389    325.433     -0.192      0.848    -700.409     575.331\n","name_BMW_2 Series Gran Coupe  6988.8492    485.787     14.387      0.000    6036.675    7941.023\n","name_BMW_3 Series             2212.7662    293.434      7.541      0.000    1637.616    2787.917\n","name_BMW_4 Series             3257.7790    312.691     10.419      0.000    2644.885    3870.673\n","name_BMW_4 Series Gran Coupe  2035.6549    231.083      8.809      0.000    1582.717    2488.593\n","name_BMW_5 Series             3286.9935    310.078     10.601      0.000    2679.219    3894.768\n","name_BMW_7 Series              1.04e+04    420.894     24.721      0.000    9579.757    1.12e+04\n","name_BMW_I3                  -8457.5768   2670.281     -3.167      0.002   -1.37e+04   -3223.651\n","name_BMW_M3                   1.503e+04    422.644     35.562      0.000    1.42e+04    1.59e+04\n","name_BMW_M4                    1.46e+04    378.999     38.517      0.000    1.39e+04    1.53e+04\n","name_BMW_X1                   1935.1394    327.987      5.900      0.000    1292.263    2578.016\n","name_BMW_X2                   3804.2854    415.091      9.165      0.000    2990.680    4617.891\n","name_BMW_X3                   7298.3592    334.933     21.791      0.000    6641.869    7954.850\n","name_BMW_X5                   1.426e+04    331.259     43.057      0.000    1.36e+04    1.49e+04\n","name_BMW_X6                    1.39e+04    424.424     32.752      0.000    1.31e+04    1.47e+04\n","name_BMW_Z4                   1522.0746    381.642      3.988      0.000     774.032    2270.117\n","==============================================================================\n","Omnibus:                     8307.055   Durbin-Watson:                   2.003\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):            97578.237\n","Skew:                           1.367   Prob(JB):                         0.00\n","Kurtosis:                      12.616   Cond. No.                     7.93e+06\n","==============================================================================\n","\n","Notes:\n","[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.\n","[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[3] The condition number is large, 7.93e+06. This might indicate that there are\n","strong multicollinearity or other numerical problems.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared (uncentered):</th>       <td>   0.940</td>  \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared (uncentered):</th>  <td>   0.940</td>  \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>           <td>1.216e+04</td> \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Fri, 10 Feb 2023</td> <th>  Prob (F-statistic):</th>            <td>  0.00</td>   \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>13:15:03</td>     <th>  Log-Likelihood:    </th>          <td>-2.3550e+05</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 23432</td>      <th>  AIC:               </th>           <td>4.711e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 23402</td>      <th>  BIC:               </th>           <td>4.713e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    30</td>      <th>                     </th>               <td> </td>     \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>               <td> </td>     \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                <td></td>                  <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>mileage</th>                      <td>   -0.1740</td> <td>    0.001</td> <td> -137.465</td> <td> 0.000</td> <td>   -0.177</td> <td>   -0.172</td>\n","</tr>\n","<tr>\n","  <th>engine</th>                       <td> 2700.4598</td> <td>   90.253</td> <td>   29.921</td> <td> 0.000</td> <td> 2523.559</td> <td> 2877.361</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                       <td>   11.8867</td> <td>    0.181</td> <td>   65.688</td> <td> 0.000</td> <td>   11.532</td> <td>   12.241</td>\n","</tr>\n","<tr>\n","  <th>owners</th>                       <td>-2380.9148</td> <td>   63.436</td> <td>  -37.533</td> <td> 0.000</td> <td>-2505.253</td> <td>-2256.577</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                   <td>  -17.7345</td> <td>  163.839</td> <td>   -0.108</td> <td> 0.914</td> <td> -338.870</td> <td>  303.401</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                  <td> 2271.5007</td> <td>  150.959</td> <td>   15.047</td> <td> 0.000</td> <td> 1975.610</td> <td> 2567.391</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>               <td> 1316.7962</td> <td>  296.099</td> <td>    4.447</td> <td> 0.000</td> <td>  736.422</td> <td> 1897.170</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                     <td>-2146.1525</td> <td>  380.401</td> <td>   -5.642</td> <td> 0.000</td> <td>-2891.764</td> <td>-1400.541</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>           <td> 1.059e+04</td> <td>  232.257</td> <td>   45.606</td> <td> 0.000</td> <td> 1.01e+04</td> <td>  1.1e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>                <td> 9937.7340</td> <td> 4184.730</td> <td>    2.375</td> <td> 0.018</td> <td> 1735.390</td> <td> 1.81e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                  <td> 1184.1538</td> <td>   94.963</td> <td>   12.470</td> <td> 0.000</td> <td>  998.021</td> <td> 1370.287</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>           <td> 1.132e+04</td> <td>  388.118</td> <td>   29.159</td> <td> 0.000</td> <td> 1.06e+04</td> <td> 1.21e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th>   <td> 7036.8792</td> <td>  170.976</td> <td>   41.157</td> <td> 0.000</td> <td> 6701.755</td> <td> 7372.003</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>                 <td>-2316.1489</td> <td>  102.372</td> <td>  -22.625</td> <td> 0.000</td> <td>-2516.804</td> <td>-2115.494</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series</th>            <td>  -62.5389</td> <td>  325.433</td> <td>   -0.192</td> <td> 0.848</td> <td> -700.409</td> <td>  575.331</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series Gran Coupe</th> <td> 6988.8492</td> <td>  485.787</td> <td>   14.387</td> <td> 0.000</td> <td> 6036.675</td> <td> 7941.023</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_3 Series</th>            <td> 2212.7662</td> <td>  293.434</td> <td>    7.541</td> <td> 0.000</td> <td> 1637.616</td> <td> 2787.917</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series</th>            <td> 3257.7790</td> <td>  312.691</td> <td>   10.419</td> <td> 0.000</td> <td> 2644.885</td> <td> 3870.673</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series Gran Coupe</th> <td> 2035.6549</td> <td>  231.083</td> <td>    8.809</td> <td> 0.000</td> <td> 1582.717</td> <td> 2488.593</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_5 Series</th>            <td> 3286.9935</td> <td>  310.078</td> <td>   10.601</td> <td> 0.000</td> <td> 2679.219</td> <td> 3894.768</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_7 Series</th>            <td>  1.04e+04</td> <td>  420.894</td> <td>   24.721</td> <td> 0.000</td> <td> 9579.757</td> <td> 1.12e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_I3</th>                  <td>-8457.5768</td> <td> 2670.281</td> <td>   -3.167</td> <td> 0.002</td> <td>-1.37e+04</td> <td>-3223.651</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M3</th>                  <td> 1.503e+04</td> <td>  422.644</td> <td>   35.562</td> <td> 0.000</td> <td> 1.42e+04</td> <td> 1.59e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M4</th>                  <td>  1.46e+04</td> <td>  378.999</td> <td>   38.517</td> <td> 0.000</td> <td> 1.39e+04</td> <td> 1.53e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X1</th>                  <td> 1935.1394</td> <td>  327.987</td> <td>    5.900</td> <td> 0.000</td> <td> 1292.263</td> <td> 2578.016</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X2</th>                  <td> 3804.2854</td> <td>  415.091</td> <td>    9.165</td> <td> 0.000</td> <td> 2990.680</td> <td> 4617.891</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X3</th>                  <td> 7298.3592</td> <td>  334.933</td> <td>   21.791</td> <td> 0.000</td> <td> 6641.869</td> <td> 7954.850</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X5</th>                  <td> 1.426e+04</td> <td>  331.259</td> <td>   43.057</td> <td> 0.000</td> <td> 1.36e+04</td> <td> 1.49e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X6</th>                  <td>  1.39e+04</td> <td>  424.424</td> <td>   32.752</td> <td> 0.000</td> <td> 1.31e+04</td> <td> 1.47e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_Z4</th>                  <td> 1522.0746</td> <td>  381.642</td> <td>    3.988</td> <td> 0.000</td> <td>  774.032</td> <td> 2270.117</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>8307.055</td> <th>  Durbin-Watson:     </th> <td>   2.003</td> \n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>97578.237</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 1.367</td>  <th>  Prob(JB):          </th> <td>    0.00</td> \n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td>12.616</td>  <th>  Cond. No.          </th> <td>7.93e+06</td> \n","</tr>\n","</table><br/><br/>Notes:<br/>[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.<br/>[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[3] The condition number is large, 7.93e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["features = feature_cols_lowVIF\n","\n","#X = df_enc_full[features]\n","#y = df_enc_full['price']\n","\n","#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","#scaler = StandardScaler()\n","#scale_cols = ['mileage', 'owners', 'engine', 'C.year']\n","#X_train_scaled = X_train\n","#X_train_scaled[scale_cols] = scaler.fit_transform(X_train_scaled[scale_cols])\n","\n","lin_reg = sm.OLS(y_train, X_train_scaled[features])\n","results = lin_reg.fit()\n","\n","X_train_scaled['y_pred'] = results.predict(X_train_scaled[features])\n","\n","rmse = statsmodels.tools.eval_measures.rmse(y_train, X_train_scaled['y_pred'])\n","\n","print(rmse)\n","\n","## Now we predict using the X_test set! \n","scale_cols = ['mileage', 'owners', 'engine', 'C.year']\n","X_test_scaled = X_test\n","X_test_scaled[scale_cols] = scaler.fit_transform(X_test_scaled[scale_cols])\n","\n","X_test_scaled['y_pred'] = results.predict(X_test_scaled[features])\n","rmse = statsmodels.tools.eval_measures.rmse(y_test, X_test_scaled['y_pred'])\n","print(rmse)\n","\n","sns.scatterplot(x = X_test['mileage'],\n","                y = y_test)\n","sns.scatterplot(x = X_test['mileage'],\n","                y = X_test['y_pred'])\n","plt.show()\n","results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"QGIq_cAJpE8q","executionInfo":{"status":"ok","timestamp":1675965621063,"user_tz":0,"elapsed":812,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"13777943-2bc4-4e58-c8a6-bc0fbe5cdc98"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4802.752394162196\n","4903.832667483607\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                 OLS Regression Results                                \n","=======================================================================================\n","Dep. Variable:                  price   R-squared (uncentered):                   0.956\n","Model:                            OLS   Adj. R-squared (uncentered):              0.956\n","Method:                 Least Squares   F-statistic:                          1.685e+04\n","Date:                Thu, 09 Feb 2023   Prob (F-statistic):                        0.00\n","Time:                        18:00:20   Log-Likelihood:                     -2.3188e+05\n","No. Observations:               23432   AIC:                                  4.638e+05\n","Df Residuals:                   23402   BIC:                                  4.641e+05\n","Df Model:                          30                                                  \n","Covariance Type:            nonrobust                                                  \n","================================================================================================\n","                                   coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------------------------\n","mileage                      -3083.8000     48.705    -63.315      0.000   -3179.266   -2988.334\n","engine                        2040.4242     44.323     46.036      0.000    1953.549    2127.299\n","C.year                        6727.5642     61.123    110.065      0.000    6607.758    6847.370\n","owners                        1246.5616     44.155     28.231      0.000    1160.014    1333.109\n","body_Coupe                    3445.7938    135.464     25.437      0.000    3180.276    3711.311\n","body_Estate                   1733.2170    129.489     13.385      0.000    1479.411    1987.024\n","body_Hatchback                1.494e+04     98.433    151.748      0.000    1.47e+04    1.51e+04\n","body_MPV                      1.217e+04    222.181     54.756      0.000    1.17e+04    1.26e+04\n","fuel_Diesel Hybrid            6511.9938    203.182     32.050      0.000    6113.745    6910.243\n","fuel_Electric                 5090.9725   3586.217      1.420      0.156   -1938.247    1.21e+04\n","fuel_Petrol                   1534.5189     80.734     19.007      0.000    1376.275    1692.763\n","fuel_Petrol Hybrid            7981.0578    334.196     23.881      0.000    7326.012    8636.104\n","fuel_Petrol Plug-in Hybrid    4499.6624    148.892     30.221      0.000    4207.824    4791.501\n","trans_Manual                   434.1014     87.305      4.972      0.000     262.978     605.225\n","name_BMW_2 Series             1.146e+04    184.210     62.197      0.000    1.11e+04    1.18e+04\n","name_BMW_2 Series Gran Coupe  1.762e+04    342.422     51.469      0.000     1.7e+04    1.83e+04\n","name_BMW_3 Series             1.687e+04     82.630    204.185      0.000    1.67e+04     1.7e+04\n","name_BMW_4 Series             1.538e+04    156.333     98.383      0.000    1.51e+04    1.57e+04\n","name_BMW_4 Series Gran Coupe  1731.0520    197.918      8.746      0.000    1343.120    2118.984\n","name_BMW_5 Series             1.821e+04    105.175    173.101      0.000     1.8e+04    1.84e+04\n","name_BMW_7 Series              2.45e+04    261.431     93.725      0.000     2.4e+04     2.5e+04\n","name_BMW_I3                  -1907.9819   2288.806     -0.834      0.405   -6394.191    2578.228\n","name_BMW_M3                   2.997e+04    279.926    107.055      0.000    2.94e+04    3.05e+04\n","name_BMW_M4                   2.627e+04    243.537    107.849      0.000    2.58e+04    2.67e+04\n","name_BMW_X1                   1.693e+04    144.816    116.906      0.000    1.66e+04    1.72e+04\n","name_BMW_X2                   1.632e+04    261.228     62.487      0.000    1.58e+04    1.68e+04\n","name_BMW_X3                   2.219e+04    146.314    151.674      0.000    2.19e+04    2.25e+04\n","name_BMW_X5                   2.858e+04    136.542    209.324      0.000    2.83e+04    2.88e+04\n","name_BMW_X6                   2.824e+04    264.177    106.891      0.000    2.77e+04    2.88e+04\n","name_BMW_Z4                   1.811e+04    234.582     77.210      0.000    1.77e+04    1.86e+04\n","==============================================================================\n","Omnibus:                    15061.611   Durbin-Watson:                   1.970\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):           568152.383\n","Skew:                           2.548   Prob(JB):                         0.00\n","Kurtosis:                      26.579   Cond. No.                         176.\n","==============================================================================\n","\n","Notes:\n","[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.\n","[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared (uncentered):</th>       <td>   0.956</td>  \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared (uncentered):</th>  <td>   0.956</td>  \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>           <td>1.685e+04</td> \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Thu, 09 Feb 2023</td> <th>  Prob (F-statistic):</th>            <td>  0.00</td>   \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>18:00:20</td>     <th>  Log-Likelihood:    </th>          <td>-2.3188e+05</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 23432</td>      <th>  AIC:               </th>           <td>4.638e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 23402</td>      <th>  BIC:               </th>           <td>4.641e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    30</td>      <th>                     </th>               <td> </td>     \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>               <td> </td>     \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                <td></td>                  <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>mileage</th>                      <td>-3083.8000</td> <td>   48.705</td> <td>  -63.315</td> <td> 0.000</td> <td>-3179.266</td> <td>-2988.334</td>\n","</tr>\n","<tr>\n","  <th>engine</th>                       <td> 2040.4242</td> <td>   44.323</td> <td>   46.036</td> <td> 0.000</td> <td> 1953.549</td> <td> 2127.299</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                       <td> 6727.5642</td> <td>   61.123</td> <td>  110.065</td> <td> 0.000</td> <td> 6607.758</td> <td> 6847.370</td>\n","</tr>\n","<tr>\n","  <th>owners</th>                       <td> 1246.5616</td> <td>   44.155</td> <td>   28.231</td> <td> 0.000</td> <td> 1160.014</td> <td> 1333.109</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                   <td> 3445.7938</td> <td>  135.464</td> <td>   25.437</td> <td> 0.000</td> <td> 3180.276</td> <td> 3711.311</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                  <td> 1733.2170</td> <td>  129.489</td> <td>   13.385</td> <td> 0.000</td> <td> 1479.411</td> <td> 1987.024</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>               <td> 1.494e+04</td> <td>   98.433</td> <td>  151.748</td> <td> 0.000</td> <td> 1.47e+04</td> <td> 1.51e+04</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                     <td> 1.217e+04</td> <td>  222.181</td> <td>   54.756</td> <td> 0.000</td> <td> 1.17e+04</td> <td> 1.26e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>           <td> 6511.9938</td> <td>  203.182</td> <td>   32.050</td> <td> 0.000</td> <td> 6113.745</td> <td> 6910.243</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>                <td> 5090.9725</td> <td> 3586.217</td> <td>    1.420</td> <td> 0.156</td> <td>-1938.247</td> <td> 1.21e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                  <td> 1534.5189</td> <td>   80.734</td> <td>   19.007</td> <td> 0.000</td> <td> 1376.275</td> <td> 1692.763</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>           <td> 7981.0578</td> <td>  334.196</td> <td>   23.881</td> <td> 0.000</td> <td> 7326.012</td> <td> 8636.104</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th>   <td> 4499.6624</td> <td>  148.892</td> <td>   30.221</td> <td> 0.000</td> <td> 4207.824</td> <td> 4791.501</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>                 <td>  434.1014</td> <td>   87.305</td> <td>    4.972</td> <td> 0.000</td> <td>  262.978</td> <td>  605.225</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series</th>            <td> 1.146e+04</td> <td>  184.210</td> <td>   62.197</td> <td> 0.000</td> <td> 1.11e+04</td> <td> 1.18e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series Gran Coupe</th> <td> 1.762e+04</td> <td>  342.422</td> <td>   51.469</td> <td> 0.000</td> <td>  1.7e+04</td> <td> 1.83e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_3 Series</th>            <td> 1.687e+04</td> <td>   82.630</td> <td>  204.185</td> <td> 0.000</td> <td> 1.67e+04</td> <td>  1.7e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series</th>            <td> 1.538e+04</td> <td>  156.333</td> <td>   98.383</td> <td> 0.000</td> <td> 1.51e+04</td> <td> 1.57e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series Gran Coupe</th> <td> 1731.0520</td> <td>  197.918</td> <td>    8.746</td> <td> 0.000</td> <td> 1343.120</td> <td> 2118.984</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_5 Series</th>            <td> 1.821e+04</td> <td>  105.175</td> <td>  173.101</td> <td> 0.000</td> <td>  1.8e+04</td> <td> 1.84e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_7 Series</th>            <td>  2.45e+04</td> <td>  261.431</td> <td>   93.725</td> <td> 0.000</td> <td>  2.4e+04</td> <td>  2.5e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_I3</th>                  <td>-1907.9819</td> <td> 2288.806</td> <td>   -0.834</td> <td> 0.405</td> <td>-6394.191</td> <td> 2578.228</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M3</th>                  <td> 2.997e+04</td> <td>  279.926</td> <td>  107.055</td> <td> 0.000</td> <td> 2.94e+04</td> <td> 3.05e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M4</th>                  <td> 2.627e+04</td> <td>  243.537</td> <td>  107.849</td> <td> 0.000</td> <td> 2.58e+04</td> <td> 2.67e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X1</th>                  <td> 1.693e+04</td> <td>  144.816</td> <td>  116.906</td> <td> 0.000</td> <td> 1.66e+04</td> <td> 1.72e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X2</th>                  <td> 1.632e+04</td> <td>  261.228</td> <td>   62.487</td> <td> 0.000</td> <td> 1.58e+04</td> <td> 1.68e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X3</th>                  <td> 2.219e+04</td> <td>  146.314</td> <td>  151.674</td> <td> 0.000</td> <td> 2.19e+04</td> <td> 2.25e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X5</th>                  <td> 2.858e+04</td> <td>  136.542</td> <td>  209.324</td> <td> 0.000</td> <td> 2.83e+04</td> <td> 2.88e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X6</th>                  <td> 2.824e+04</td> <td>  264.177</td> <td>  106.891</td> <td> 0.000</td> <td> 2.77e+04</td> <td> 2.88e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_Z4</th>                  <td> 1.811e+04</td> <td>  234.582</td> <td>   77.210</td> <td> 0.000</td> <td> 1.77e+04</td> <td> 1.86e+04</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>15061.611</td> <th>  Durbin-Watson:     </th>  <td>   1.970</td> \n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>568152.383</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 2.548</td>   <th>  Prob(JB):          </th>  <td>    0.00</td> \n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td>26.579</td>   <th>  Cond. No.          </th>  <td>    176.</td> \n","</tr>\n","</table><br/><br/>Notes:<br/>[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.<br/>[2] Standard Errors assume that the covariance matrix of the errors is correctly specified."]},"metadata":{},"execution_count":273}]},{"cell_type":"code","source":["sns.scatterplot(x = X_test['mileage'],\n","                y = np.log(y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":298},"id":"mfjVbDnBt7vp","executionInfo":{"status":"ok","timestamp":1675936085129,"user_tz":0,"elapsed":718,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"b038fb02-3e6a-4ee2-914a-1450c1956f6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4dc123f970>"]},"metadata":{},"execution_count":43},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["features = feature_cols_lowVIF\n","\n","X = df_enc_full[features]\n","y = 1/np.log(df_enc_full['price'])\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","scaler = StandardScaler()\n","scale_cols = ['mileage', 'owners', 'engine', 'C.year']\n","X_train_scaled = X_train\n","X_train_scaled[scale_cols] = scaler.fit_transform(X_train_scaled[scale_cols])\n","\n","lin_reg = sm.OLS(y_train, X_train_scaled[features])\n","results = lin_reg.fit()\n","\n","X_train_scaled['y_pred'] = results.predict(X_train_scaled[features])\n","\n","rmse = np.exp(statsmodels.tools.eval_measures.rmse(y_train, X_train_scaled['y_pred']))\n","\n","print(rmse)\n","\n","## Now we predict using the X_test set! \n","## We don't \"fit\" the model again! \n","## We want to see test results that are similar to the training results!\n","scale_cols = ['mileage', 'owners', 'engine', 'C.year']\n","X_test_scaled = X_test\n","X_test_scaled[scale_cols] = scaler.fit_transform(X_test_scaled[scale_cols])\n","\n","X_test_scaled['y_pred'] = results.predict(X_test_scaled[features])\n","rmse = statsmodels.tools.eval_measures.rmse(np.exp(y_test), np.exp(X_test_scaled['y_pred']))\n","print(rmse)\n","\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(1/y_test))\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(1/X_test_scaled['y_pred']))\n","#ax.set_ylim(-50,140000)\n","plt.show()\n","\n","'''sns.scatterplot(x = np.exp(y_test),\n","                y = np.exp(X_test['y_pred']))'''\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":346},"id":"w6POdzFpt-jo","executionInfo":{"status":"ok","timestamp":1675942437924,"user_tz":0,"elapsed":1327,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"8cdee58f-5fea-4fa5-c859-837f2008734c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.0133365258718354\n","0.01463444962377379\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"execute_result","data":{"text/plain":["\"sns.scatterplot(x = np.exp(y_test),\\n                y = np.exp(X_test['y_pred']))\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["outlier_idx = X_test_scaled[X_test_scaled['y_pred']>15].index\n","X_test_scaled.drop(outlier_idx, inplace=True, axis=0)\n","y_test.drop(outlier_idx, inplace=True, axis=0)\n","len(y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XOIqao0tKQt0","executionInfo":{"status":"ok","timestamp":1675939430081,"user_tz":0,"elapsed":404,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"81661dad-8c6f-4a74-b4fe-e3f1c4f466a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5857"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["rmse = statsmodels.tools.eval_measures.rmse(np.exp(y_test), np.exp(X_test_scaled['y_pred']))\n","print(rmse)\n","\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(y_test))\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(X_test_scaled['y_pred']))\n","#ax.set_ylim(-50,140000)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":302},"id":"flVgAZmVrSeq","executionInfo":{"status":"ok","timestamp":1675939434113,"user_tz":0,"elapsed":716,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"801d6000-c4ab-4eee-9c77-4c3a92304cba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11153.295567567384\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["mileage = np.arange(1,10, 0.1)\n","price =np.exp(1/mileage)\n","price_log = 1/np.log(price)\n","plt.plot(mileage, price)\n","plt.plot(mileage, price_log)\n","plt.plot(mileage, np.exp(1/price_log))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"tslA9cnm33y7","executionInfo":{"status":"ok","timestamp":1675942407788,"user_tz":0,"elapsed":416,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"f55a3d71-4f9b-4610-9bd8-21a66f267494"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f4dc01da910>]"]},"metadata":{},"execution_count":137},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["features = feature_cols_lowVIF\n","\n","lin_reg = sm.OLS(y_train, X_train_scaled[features])\n","results = lin_reg.fit()\n","results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"eo8d3SKcsTAC","executionInfo":{"status":"ok","timestamp":1675941838302,"user_tz":0,"elapsed":106,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"10eabea5-5f4f-465c-e9f2-021ecc2fff59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                 OLS Regression Results                                \n","=======================================================================================\n","Dep. Variable:                  price   R-squared (uncentered):                   0.956\n","Model:                            OLS   Adj. R-squared (uncentered):              0.956\n","Method:                 Least Squares   F-statistic:                          1.685e+04\n","Date:                Thu, 09 Feb 2023   Prob (F-statistic):                        0.00\n","Time:                        11:23:57   Log-Likelihood:                     -2.3188e+05\n","No. Observations:               23432   AIC:                                  4.638e+05\n","Df Residuals:                   23402   BIC:                                  4.641e+05\n","Df Model:                          30                                                  \n","Covariance Type:            nonrobust                                                  \n","================================================================================================\n","                                   coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------------------------\n","mileage                      -3083.8000     48.705    -63.315      0.000   -3179.266   -2988.334\n","engine                        2040.4242     44.323     46.036      0.000    1953.549    2127.299\n","C.year                        6727.5642     61.123    110.065      0.000    6607.758    6847.370\n","owners                        1246.5616     44.155     28.231      0.000    1160.014    1333.109\n","body_Coupe                    3445.7938    135.464     25.437      0.000    3180.276    3711.311\n","body_Estate                   1733.2170    129.489     13.385      0.000    1479.411    1987.024\n","body_Hatchback                1.494e+04     98.433    151.748      0.000    1.47e+04    1.51e+04\n","body_MPV                      1.217e+04    222.181     54.756      0.000    1.17e+04    1.26e+04\n","fuel_Diesel Hybrid            6511.9938    203.182     32.050      0.000    6113.745    6910.243\n","fuel_Electric                 5090.9725   3586.217      1.420      0.156   -1938.247    1.21e+04\n","fuel_Petrol                   1534.5189     80.734     19.007      0.000    1376.275    1692.763\n","fuel_Petrol Hybrid            7981.0578    334.196     23.881      0.000    7326.012    8636.104\n","fuel_Petrol Plug-in Hybrid    4499.6624    148.892     30.221      0.000    4207.824    4791.501\n","trans_Manual                   434.1014     87.305      4.972      0.000     262.978     605.225\n","name_BMW_2 Series             1.146e+04    184.210     62.197      0.000    1.11e+04    1.18e+04\n","name_BMW_2 Series Gran Coupe  1.762e+04    342.422     51.469      0.000     1.7e+04    1.83e+04\n","name_BMW_3 Series             1.687e+04     82.630    204.185      0.000    1.67e+04     1.7e+04\n","name_BMW_4 Series             1.538e+04    156.333     98.383      0.000    1.51e+04    1.57e+04\n","name_BMW_4 Series Gran Coupe  1731.0520    197.918      8.746      0.000    1343.120    2118.984\n","name_BMW_5 Series             1.821e+04    105.175    173.101      0.000     1.8e+04    1.84e+04\n","name_BMW_7 Series              2.45e+04    261.431     93.725      0.000     2.4e+04     2.5e+04\n","name_BMW_I3                  -1907.9819   2288.806     -0.834      0.405   -6394.191    2578.228\n","name_BMW_M3                   2.997e+04    279.926    107.055      0.000    2.94e+04    3.05e+04\n","name_BMW_M4                   2.627e+04    243.537    107.849      0.000    2.58e+04    2.67e+04\n","name_BMW_X1                   1.693e+04    144.816    116.906      0.000    1.66e+04    1.72e+04\n","name_BMW_X2                   1.632e+04    261.228     62.487      0.000    1.58e+04    1.68e+04\n","name_BMW_X3                   2.219e+04    146.314    151.674      0.000    2.19e+04    2.25e+04\n","name_BMW_X5                   2.858e+04    136.542    209.324      0.000    2.83e+04    2.88e+04\n","name_BMW_X6                   2.824e+04    264.177    106.891      0.000    2.77e+04    2.88e+04\n","name_BMW_Z4                   1.811e+04    234.582     77.210      0.000    1.77e+04    1.86e+04\n","==============================================================================\n","Omnibus:                    15061.611   Durbin-Watson:                   1.970\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):           568152.383\n","Skew:                           2.548   Prob(JB):                         0.00\n","Kurtosis:                      26.579   Cond. No.                         176.\n","==============================================================================\n","\n","Notes:\n","[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.\n","[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared (uncentered):</th>       <td>   0.956</td>  \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared (uncentered):</th>  <td>   0.956</td>  \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>           <td>1.685e+04</td> \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Thu, 09 Feb 2023</td> <th>  Prob (F-statistic):</th>            <td>  0.00</td>   \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>11:23:57</td>     <th>  Log-Likelihood:    </th>          <td>-2.3188e+05</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 23432</td>      <th>  AIC:               </th>           <td>4.638e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 23402</td>      <th>  BIC:               </th>           <td>4.641e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    30</td>      <th>                     </th>               <td> </td>     \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>               <td> </td>     \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                <td></td>                  <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>mileage</th>                      <td>-3083.8000</td> <td>   48.705</td> <td>  -63.315</td> <td> 0.000</td> <td>-3179.266</td> <td>-2988.334</td>\n","</tr>\n","<tr>\n","  <th>engine</th>                       <td> 2040.4242</td> <td>   44.323</td> <td>   46.036</td> <td> 0.000</td> <td> 1953.549</td> <td> 2127.299</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                       <td> 6727.5642</td> <td>   61.123</td> <td>  110.065</td> <td> 0.000</td> <td> 6607.758</td> <td> 6847.370</td>\n","</tr>\n","<tr>\n","  <th>owners</th>                       <td> 1246.5616</td> <td>   44.155</td> <td>   28.231</td> <td> 0.000</td> <td> 1160.014</td> <td> 1333.109</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                   <td> 3445.7938</td> <td>  135.464</td> <td>   25.437</td> <td> 0.000</td> <td> 3180.276</td> <td> 3711.311</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                  <td> 1733.2170</td> <td>  129.489</td> <td>   13.385</td> <td> 0.000</td> <td> 1479.411</td> <td> 1987.024</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>               <td> 1.494e+04</td> <td>   98.433</td> <td>  151.748</td> <td> 0.000</td> <td> 1.47e+04</td> <td> 1.51e+04</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                     <td> 1.217e+04</td> <td>  222.181</td> <td>   54.756</td> <td> 0.000</td> <td> 1.17e+04</td> <td> 1.26e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>           <td> 6511.9938</td> <td>  203.182</td> <td>   32.050</td> <td> 0.000</td> <td> 6113.745</td> <td> 6910.243</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>                <td> 5090.9725</td> <td> 3586.217</td> <td>    1.420</td> <td> 0.156</td> <td>-1938.247</td> <td> 1.21e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                  <td> 1534.5189</td> <td>   80.734</td> <td>   19.007</td> <td> 0.000</td> <td> 1376.275</td> <td> 1692.763</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>           <td> 7981.0578</td> <td>  334.196</td> <td>   23.881</td> <td> 0.000</td> <td> 7326.012</td> <td> 8636.104</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th>   <td> 4499.6624</td> <td>  148.892</td> <td>   30.221</td> <td> 0.000</td> <td> 4207.824</td> <td> 4791.501</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>                 <td>  434.1014</td> <td>   87.305</td> <td>    4.972</td> <td> 0.000</td> <td>  262.978</td> <td>  605.225</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series</th>            <td> 1.146e+04</td> <td>  184.210</td> <td>   62.197</td> <td> 0.000</td> <td> 1.11e+04</td> <td> 1.18e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_2 Series Gran Coupe</th> <td> 1.762e+04</td> <td>  342.422</td> <td>   51.469</td> <td> 0.000</td> <td>  1.7e+04</td> <td> 1.83e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_3 Series</th>            <td> 1.687e+04</td> <td>   82.630</td> <td>  204.185</td> <td> 0.000</td> <td> 1.67e+04</td> <td>  1.7e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series</th>            <td> 1.538e+04</td> <td>  156.333</td> <td>   98.383</td> <td> 0.000</td> <td> 1.51e+04</td> <td> 1.57e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_4 Series Gran Coupe</th> <td> 1731.0520</td> <td>  197.918</td> <td>    8.746</td> <td> 0.000</td> <td> 1343.120</td> <td> 2118.984</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_5 Series</th>            <td> 1.821e+04</td> <td>  105.175</td> <td>  173.101</td> <td> 0.000</td> <td>  1.8e+04</td> <td> 1.84e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_7 Series</th>            <td>  2.45e+04</td> <td>  261.431</td> <td>   93.725</td> <td> 0.000</td> <td>  2.4e+04</td> <td>  2.5e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_I3</th>                  <td>-1907.9819</td> <td> 2288.806</td> <td>   -0.834</td> <td> 0.405</td> <td>-6394.191</td> <td> 2578.228</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M3</th>                  <td> 2.997e+04</td> <td>  279.926</td> <td>  107.055</td> <td> 0.000</td> <td> 2.94e+04</td> <td> 3.05e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_M4</th>                  <td> 2.627e+04</td> <td>  243.537</td> <td>  107.849</td> <td> 0.000</td> <td> 2.58e+04</td> <td> 2.67e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X1</th>                  <td> 1.693e+04</td> <td>  144.816</td> <td>  116.906</td> <td> 0.000</td> <td> 1.66e+04</td> <td> 1.72e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X2</th>                  <td> 1.632e+04</td> <td>  261.228</td> <td>   62.487</td> <td> 0.000</td> <td> 1.58e+04</td> <td> 1.68e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X3</th>                  <td> 2.219e+04</td> <td>  146.314</td> <td>  151.674</td> <td> 0.000</td> <td> 2.19e+04</td> <td> 2.25e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X5</th>                  <td> 2.858e+04</td> <td>  136.542</td> <td>  209.324</td> <td> 0.000</td> <td> 2.83e+04</td> <td> 2.88e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_X6</th>                  <td> 2.824e+04</td> <td>  264.177</td> <td>  106.891</td> <td> 0.000</td> <td> 2.77e+04</td> <td> 2.88e+04</td>\n","</tr>\n","<tr>\n","  <th>name_BMW_Z4</th>                  <td> 1.811e+04</td> <td>  234.582</td> <td>   77.210</td> <td> 0.000</td> <td> 1.77e+04</td> <td> 1.86e+04</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>15061.611</td> <th>  Durbin-Watson:     </th>  <td>   1.970</td> \n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>568152.383</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 2.548</td>   <th>  Prob(JB):          </th>  <td>    0.00</td> \n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td>26.579</td>   <th>  Cond. No.          </th>  <td>    176.</td> \n","</tr>\n","</table><br/><br/>Notes:<br/>[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.<br/>[2] Standard Errors assume that the covariance matrix of the errors is correctly specified."]},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["features = feature_cols_lowVIF\n","\n","X = df_enc_full[features]\n","y = np.log(df_enc_full['price'])\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","lin_reg = sm.OLS(y_train, X_train[features])\n","\n","# Regression model\n","results = lin_reg.fit()\n","\n","# Fit model to train data and list residual values\n","X_train['y_pred'] = results.predict(X_train[features])\n","residual_values = results.resid # residual values\n","\n","#Create a dataFrame for the residuals\n","res = pd.DataFrame(residual_values, columns=['residual'])\n","\n","# Get the values for the x-axis, use index of residuals to find the corresponding price in the original dataframe\n","price_idx = df.loc[res.index]['price']\n","# Merge this price onto the residuals dataframe\n","res_price = res.merge(price_idx, left_index=True, right_index=True)\n","# Adjust the residual value to centre around 0 (otherwise, negaitve residuals do not get procesed with the exp scale)\n","y_adj = np.exp(res_price['residual'])-(1/np.exp(res_price['residual']))\n","\n","# Plot data\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = res_price['price'], y = y_adj, ax=ax)\n","ax.set_ylim(-10,10)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"pFvpn3RhE9iX","executionInfo":{"status":"ok","timestamp":1675785704633,"user_tz":0,"elapsed":712,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"f1829289-94b3-4463-b123-725eed7f6f23"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["x=np.arange(-2,2,0.1)\n","plt.plot(x, np.exp(x)-(1/np.exp(x)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"JR7kV6C0fdgM","executionInfo":{"status":"ok","timestamp":1675785693825,"user_tz":0,"elapsed":758,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"8d5db1a3-e07e-4218-82e4-8078aa0c23e0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f44006e6e80>]"]},"metadata":{},"execution_count":427},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["feature_cols_lowVIF = ['mileage', 'BHP', 'owners', 'engine',\n","        'body_Coupe', 'body_Estate', 'body_MPV', 'body_Saloon',\n","       'fuel_Diesel', 'fuel_Diesel Hybrid', 'fuel_Electric', 'fuel_Petrol',\n","       'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid', 'trans_Manual',\n","       'name_BMW_1 Series', 'name_BMW_2 Series',\n","       'name_BMW_2 Series Gran Coupe', 'name_BMW_4 Series',\n","       'name_BMW_4 Series Gran Coupe', 'name_BMW_5 Series',\n","       'name_BMW_7 Series', 'name_BMW_I3', 'name_BMW_M3', 'name_BMW_M4',\n","       'name_BMW_X1', 'name_BMW_X2', 'name_BMW_X3', 'name_BMW_X5',\n","       'name_BMW_X6', 'name_BMW_Z4']\n","\n","X = df_enc_full[feature_cols_lowVIF]\n","y = np.log(df_enc_full['price'])\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","lin_reg = sm.OLS(y_train, X_train[feature_cols_lowVIF])\n","results = lin_reg.fit()\n","\n","X_train['y_pred'] = results.predict(X_train[feature_cols_lowVIF])\n","\n","rmse = np.exp(statsmodels.tools.eval_measures.rmse(y_train, X_train['y_pred']))\n","\n","print(rmse)\n","\n","X_test = X_test[feature_cols_lowVIF]\n","\n","## Now we predict using the X_test set! \n","## We don't \"fit\" the model again! \n","## We want to see test results that are similar to the training results!\n","\n","X_test['y_pred'] = results.predict(X_test)\n","rmse = np.exp(statsmodels.tools.eval_measures.rmse(y_test, X_test['y_pred']))\n","print(rmse)\n","\n","sns.scatterplot(x = X_test['mileage'],\n","                y = np.exp(y_test))\n","sns.scatterplot(x = X_test['mileage'],\n","                y = np.exp(X_test['y_pred']))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"_eDe3nx_0J0Y","executionInfo":{"status":"error","timestamp":1675856145374,"user_tz":0,"elapsed":597,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"e8747a45-6614-46d9-9be9-c1578252256a"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-668ef93d718b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     10\u001b[0m        'name_BMW_X6', 'name_BMW_Z4']\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_enc_full\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mfeature_cols_lowVIF\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_enc_full\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3462\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3463\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3464\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_listlike_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3465\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3466\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_get_listlike_indexer\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   1312\u001b[0m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reindex_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1313\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1314\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_read_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1315\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1316\u001b[0m         if needs_i8_conversion(ax.dtype) or isinstance(\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_read_indexer\u001b[0;34m(self, key, indexer, axis)\u001b[0m\n\u001b[1;32m   1375\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1376\u001b[0m             \u001b[0mnot_found\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmissing_mask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1377\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{not_found} not in index\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1378\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1379\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['fuel_Diesel'] not in index\""]}]},{"cell_type":"code","source":["feature_cols_lowVIF = ['mileage', 'engine', 'C.year', 'owners', 'body_Coupe', 'body_Estate',\n","       'body_Hatchback', 'body_MPV', 'fuel_Diesel Hybrid', 'fuel_Electric',\n","       'fuel_Petrol', 'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid',\n","       'trans_Manual', 'name_BMW_2 Series', 'name_BMW_2 Series Gran Coupe',\n","       'name_BMW_3 Series', 'name_BMW_4 Series',\n","       'name_BMW_4 Series Gran Coupe', 'name_BMW_5 Series',\n","       'name_BMW_7 Series', 'name_BMW_I3', 'name_BMW_M3', 'name_BMW_M4',\n","       'name_BMW_X1', 'name_BMW_X2', 'name_BMW_X3', 'name_BMW_X5',\n","       'name_BMW_X6', 'name_BMW_Z4']\n","\n","X = df_enc_full[feature_cols_lowVIF]\n","y = df_enc_full['price']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","scale_cols = ['mileage', 'owners', 'engine', 'C.year']\n","X_train_scaled = X_train\n","X_train_scaled[scale_cols] = StandardScaler().fit_transform(X_train_scaled[scale_cols])\n","\n","## We can create an indexed list (a series) where we list the VIF of each of the columns. Note the use of '.shape' in the second part of the loop\n","pd.Series([variance_inflation_factor(X_train_scaled[feature_cols_lowVIF].values, i) for i in range(X_train_scaled[feature_cols_lowVIF].shape[1])], index = X_train_scaled[feature_cols_lowVIF].columns)\n","lin_reg = sm.OLS(y_train, X_train_scaled[feature_cols_lowVIF])\n","results = lin_reg.fit()\n","results.summary()"],"metadata":{"id":"qbL-F6yyCXdw","colab":{"base_uri":"https://localhost:8080/","height":248},"executionInfo":{"status":"error","timestamp":1675948551140,"user_tz":0,"elapsed":275,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"4b89fb25-ab06-4a58-94f3-b9f331b6f0d7"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-28-01e395e62f14>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      9\u001b[0m        'name_BMW_X6', 'name_BMW_Z4']\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_enc_full\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mfeature_cols_lowVIF\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_enc_full\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df_enc_full' is not defined"]}]},{"cell_type":"code","source":["features = feature_cols_lowVIF\n","\n","X = df_enc_full[features]\n","y = np.log(df_enc_full['price'])\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","scale_cols = ['mileage', 'owners', 'engine', 'C.year']\n","X_train_scaled = X_train\n","X_train_scaled[scale_cols] = StandardScaler().fit_transform(X_train_scaled[scale_cols])\n","\n","lin_reg = sm.OLS(y_train, X_train_scaled[features])\n","results = lin_reg.fit()\n","\n","X_train_scaled['y_pred'] = results.predict(X_train_scaled[features])\n","\n","rmse = statsmodels.tools.eval_measures.rmse(y_train, X_train_scaled['y_pred'])\n","\n","print(rmse)\n","\n","## Now we predict using the X_test set! \n","## We don't \"fit\" the model again! \n","## We want to see test results that are similar to the training results!\n","scale_cols = ['mileage', 'owners', 'engine', 'C.year']\n","X_test_scaled = X_test\n","X_test_scaled[scale_cols] = StandardScaler().fit_transform(X_test_scaled[scale_cols])\n","\n","X_test_scaled['y_pred'] = results.predict(X_test_scaled[features])\n","rmse = np.exp(statsmodels.tools.eval_measures.rmse(y_test, X_test_scaled['y_pred']))\n","print(rmse)\n","\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(y_test), ax=ax)\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(X_test_scaled['y_pred']), ax=ax)\n","ax.set_ylim(-50,140000)\n","plt.show()"],"metadata":{"id":"rkB8ZFCnzzlX","executionInfo":{"status":"ok","timestamp":1675856854235,"user_tz":0,"elapsed":507,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"1561b173-43cf-4af7-a678-e7fa6d24c73a","colab":{"base_uri":"https://localhost:8080/","height":320}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.1984542725618959\n","3.4341353492706896\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["features_full = ['mileage', 'BHP', 'engine', 'C.year',\n","       'owners', 'body_Convertible', 'body_Coupe', 'body_Estate',\n","       'body_Hatchback', 'body_MPV', 'body_SUV', 'body_Saloon',\n","       'fuel_Diesel Hybrid', 'fuel_Electric', 'fuel_Petrol',\n","       'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid', 'trans_Manual',\n","       'name_BMW_1 Series', 'name_BMW_2 Series',\n","       'name_BMW_2 Series Active Tourer', 'name_BMW_2 Series Gran Coupe',\n","       'name_BMW_3 Series', 'name_BMW_4 Series',\n","       'name_BMW_4 Series Gran Coupe', 'name_BMW_5 Series',\n","       'name_BMW_7 Series', 'name_BMW_I3', 'name_BMW_M3', 'name_BMW_M4',\n","       'name_BMW_X1', 'name_BMW_X2', 'name_BMW_X3', 'name_BMW_X5',\n","       'name_BMW_X6', 'name_BMW_Z4']\n","features_james = ['mileage',  'C.year', 'owners', 'BHP', 'body_MPV', 'fuel_Diesel Hybrid', 'fuel_Electric',\n","       'fuel_Petrol', 'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid',\n","       'trans_Manual', 'name_BMW_2 Series', \n","       'name_BMW_3 Series', 'name_BMW_4 Series',\n","       'name_BMW_4 Series Gran Coupe', 'name_BMW_5 Series',\n","       'name_BMW_7 Series', 'name_BMW_I3', 'name_BMW_M3', 'name_BMW_M4',\n","       'name_BMW_X1', 'name_BMW_X2', 'name_BMW_X3', 'name_BMW_X5',\n","       'name_BMW_X6', 'name_BMW_Z4', 'name_BMW_1 Series']\n","\n","feature = features_james\n","\n","X = df_enc_full[features]\n","y = np.log(df_enc_full['price'])\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","scaler = StandardScaler()\n","scale_cols = ['mileage', 'owners', 'C.year', 'BHP']\n","X_train_scaled = X_train\n","X_train_scaled[scale_cols] = scaler.fit_transform(X_train_scaled[scale_cols])\n","\n","lin_reg = sm.OLS(y_train, X_train_scaled[features])\n","model = lin_reg.fit()\n","\n","X_train_scaled['y_pred'] = model.predict(X_train_scaled[features])\n","\n","rmse = np.exp(statsmodels.tools.eval_measures.rmse(y_train, X_train_scaled['y_pred']))\n","\n","print(rmse)\n","\n","## Now we predict using the X_test set! \n","## We don't \"fit\" the model again! \n","## We want to see test results that are similar to the training results!\n","X_test_scaled = X_test\n","X_test_scaled[scale_cols] = scaler.transform(X_test_scaled[scale_cols])\n","\n","X_test_scaled['y_pred'] = model.predict(X_test_scaled[features])\n","rmse = np.exp(statsmodels.tools.eval_measures.rmse(y_test, X_test_scaled['y_pred']))\n","print(rmse)\n","\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(y_test), ax=ax)\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(X_test_scaled['y_pred']), ax=ax)\n","ax.set_ylim(-1000,140000)\n","plt.show()\n","\n"],"metadata":{"id":"bky4WX2J23F5","executionInfo":{"status":"error","timestamp":1675948542272,"user_tz":0,"elapsed":259,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"d7a4a571-f781-4781-b908-5ca17039d470","colab":{"base_uri":"https://localhost:8080/","height":248}},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-8ac6901aa7ab>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0mfeature\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfeatures_james\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 24\u001b[0;31m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_enc_full\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     25\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_enc_full\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df_enc_full' is not defined"]}]},{"cell_type":"code","source":["# We can create an indexed list (a series) where we list the VIF of each of the columns. Note the use of '.shape' in the second part of the loop\n","pd.Series([variance_inflation_factor(X_train_scaled[features].values, i) for i in range(X_train_scaled[features].shape[1])], index = X_train_scaled[features].columns)\n","\n","# OR go straight to R^2 and condition number\n","lin_reg = sm.OLS(y_train, X_train_scaled[features])\n","results = lin_reg.fit()\n","results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1y1o5ivTTThs","executionInfo":{"status":"ok","timestamp":1675881331942,"user_tz":0,"elapsed":5120,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"2bba3475-8c63-45f9-c8cd-453b16ae2372"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mileage                         2.393054\n","C.year                          3.663554\n","owners                          1.979905\n","BHP                             2.079826\n","body_MPV                        1.103420\n","fuel_Diesel Hybrid              1.213535\n","fuel_Electric                   1.114194\n","fuel_Petrol                     2.400248\n","fuel_Petrol Hybrid              1.081652\n","fuel_Petrol Plug-in Hybrid      1.301742\n","trans_Manual                    1.979627\n","name_BMW_2 Series               1.154538\n","name_BMW_3 Series               1.432068\n","name_BMW_4 Series               1.088314\n","name_BMW_4 Series Gran Coupe    1.034405\n","name_BMW_5 Series               1.168358\n","name_BMW_7 Series               1.085126\n","name_BMW_I3                     1.133824\n","name_BMW_M3                     1.227931\n","name_BMW_M4                     1.298026\n","name_BMW_X1                     1.105614\n","name_BMW_X2                     1.053491\n","name_BMW_X3                     1.015344\n","name_BMW_X5                     1.182871\n","name_BMW_X6                     1.042491\n","name_BMW_Z4                     1.186442\n","name_BMW_1 Series               1.901798\n","dtype: float64"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["X_train_scaled[feature_cols].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"GUUqzuvTJ4k1","executionInfo":{"status":"ok","timestamp":1675948952407,"user_tz":0,"elapsed":286,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"c9afae16-181a-46ed-f71e-d91174356043"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        mileage       BHP    owners  engine (L)         year    C.year  \\\n","17306 -0.326491 -0.354140 -1.019807   -0.442720  2018 18 reg  0.565122   \n","24539  0.028905 -0.874528  0.032157   -0.442720  2018 68 reg  0.565122   \n","18840  1.345784 -0.766729  0.032157   -0.442720  2014 14 reg -0.527546   \n","4558  -0.873254 -1.289599  0.032157   -1.322010  2019 19 reg  0.838289   \n","17998 -0.718903  0.697604  1.084120    1.315861  2008 08 reg -2.166548   \n","\n","       series_Bmw 1 Series  series_Bmw 2 Series  \\\n","17306                    0                    0   \n","24539                    0                    0   \n","18840                    0                    0   \n","4558                     1                    0   \n","17998                    0                    0   \n","\n","       series_Bmw 2 Series Active Tourer  series_Bmw 2 Series Gran Coupe  ...  \\\n","17306                                  0                               0  ...   \n","24539                                  0                               0  ...   \n","18840                                  0                               0  ...   \n","4558                                   0                               0  ...   \n","17998                                  0                               0  ...   \n","\n","       body_SUV  body_Saloon  fuel_Diesel  fuel_Diesel Hybrid  fuel_Electric  \\\n","17306         0            0            1                   0              0   \n","24539         1            0            1                   0              0   \n","18840         0            0            1                   0              0   \n","4558          0            0            1                   0              0   \n","17998         0            1            1                   0              0   \n","\n","       fuel_Petrol  fuel_Petrol Hybrid  fuel_Petrol Plug-in Hybrid  \\\n","17306            0                   0                           0   \n","24539            0                   0                           0   \n","18840            0                   0                           0   \n","4558             0                   0                           0   \n","17998            0                   0                           0   \n","\n","       trans_Automatic  trans_Manual  \n","17306                1             0  \n","24539                0             1  \n","18840                0             1  \n","4558                 0             1  \n","17998                1             0  \n","\n","[5 rows x 39 columns]"],"text/html":["\n","  <div id=\"df-9c966885-0cc2-4c6e-a0b3-57edbcd7beb9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mileage</th>\n","      <th>BHP</th>\n","      <th>owners</th>\n","      <th>engine (L)</th>\n","      <th>year</th>\n","      <th>C.year</th>\n","      <th>series_Bmw 1 Series</th>\n","      <th>series_Bmw 2 Series</th>\n","      <th>series_Bmw 2 Series Active Tourer</th>\n","      <th>series_Bmw 2 Series Gran Coupe</th>\n","      <th>...</th>\n","      <th>body_SUV</th>\n","      <th>body_Saloon</th>\n","      <th>fuel_Diesel</th>\n","      <th>fuel_Diesel Hybrid</th>\n","      <th>fuel_Electric</th>\n","      <th>fuel_Petrol</th>\n","      <th>fuel_Petrol Hybrid</th>\n","      <th>fuel_Petrol Plug-in Hybrid</th>\n","      <th>trans_Automatic</th>\n","      <th>trans_Manual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>17306</th>\n","      <td>-0.326491</td>\n","      <td>-0.354140</td>\n","      <td>-1.019807</td>\n","      <td>-0.442720</td>\n","      <td>2018 18 reg</td>\n","      <td>0.565122</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24539</th>\n","      <td>0.028905</td>\n","      <td>-0.874528</td>\n","      <td>0.032157</td>\n","      <td>-0.442720</td>\n","      <td>2018 68 reg</td>\n","      <td>0.565122</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18840</th>\n","      <td>1.345784</td>\n","      <td>-0.766729</td>\n","      <td>0.032157</td>\n","      <td>-0.442720</td>\n","      <td>2014 14 reg</td>\n","      <td>-0.527546</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4558</th>\n","      <td>-0.873254</td>\n","      <td>-1.289599</td>\n","      <td>0.032157</td>\n","      <td>-1.322010</td>\n","      <td>2019 19 reg</td>\n","      <td>0.838289</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17998</th>\n","      <td>-0.718903</td>\n","      <td>0.697604</td>\n","      <td>1.084120</td>\n","      <td>1.315861</td>\n","      <td>2008 08 reg</td>\n","      <td>-2.166548</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã 39 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c966885-0cc2-4c6e-a0b3-57edbcd7beb9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9c966885-0cc2-4c6e-a0b3-57edbcd7beb9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9c966885-0cc2-4c6e-a0b3-57edbcd7beb9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["file_path = 'drive/MyDrive'\n","james_df = pd.read_csv(file_path+'/'+'Out_304.csv')\n","james_df.rename(columns={'Unnamed: 0':'index'}, inplace=True)\n","james_df.drop(['link','year'], axis=1, inplace=True)\n","james_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":446},"id":"jtbTxiIEeJMc","executionInfo":{"status":"ok","timestamp":1675959376121,"user_tz":0,"elapsed":1371,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"85cfe85e-07c7-4b46-c886-589877f7ab33"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              index          price        mileage           BHP        owners  \\\n","count  29279.000000   29279.000000   29279.000000  29279.000000  29279.000000   \n","mean   14639.000000   19742.102736   56751.890092    218.757127      2.964992   \n","std     8452.263602   11472.632279   36374.985976     80.704403      0.948340   \n","min        0.000000     750.000000      10.000000     26.165662      2.000000   \n","25%     7319.500000   11000.000000   27351.500000    168.000000      2.000000   \n","50%    14639.000000   17995.000000   50000.000000    190.000000      3.000000   \n","75%    21958.500000   25990.000000   80000.000000    265.000000      3.000000   \n","max    29278.000000  114995.000000  398000.000000    798.346589     13.000000   \n","\n","         engine (L)        C.year  series_Bmw 1 Series  series_Bmw 2 Series  \\\n","count  29279.000000  29279.000000         29279.000000         29279.000000   \n","mean       2.251532   2015.942314             0.199119             0.044059   \n","std        0.568266      3.661573             0.399344             0.205229   \n","min        0.600000   2005.000000             0.000000             0.000000   \n","25%        2.000000   2014.000000             0.000000             0.000000   \n","50%        2.000000   2017.000000             0.000000             0.000000   \n","75%        3.000000   2019.000000             0.000000             0.000000   \n","max        6.600000   2021.000000             1.000000             1.000000   \n","\n","       series_Bmw 2 Series Active Tourer  ...      body_SUV   body_Saloon  \\\n","count                       29279.000000  ...  29279.000000  29279.000000   \n","mean                            0.021346  ...      0.194713      0.279313   \n","std                             0.144539  ...      0.395986      0.448669   \n","min                             0.000000  ...      0.000000      0.000000   \n","25%                             0.000000  ...      0.000000      0.000000   \n","50%                             0.000000  ...      0.000000      0.000000   \n","75%                             0.000000  ...      0.000000      1.000000   \n","max                             1.000000  ...      1.000000      1.000000   \n","\n","        fuel_Diesel  fuel_Diesel Hybrid  fuel_Electric   fuel_Petrol  \\\n","count  29279.000000        29279.000000   29279.000000  29279.000000   \n","mean       0.550053            0.029236       0.000068      0.351481   \n","std        0.497497            0.168470       0.008265      0.477441   \n","min        0.000000            0.000000       0.000000      0.000000   \n","25%        0.000000            0.000000       0.000000      0.000000   \n","50%        1.000000            0.000000       0.000000      0.000000   \n","75%        1.000000            0.000000       0.000000      1.000000   \n","max        1.000000            1.000000       1.000000      1.000000   \n","\n","       fuel_Petrol Hybrid  fuel_Petrol Plug-in Hybrid  trans_Automatic  \\\n","count        29279.000000                29279.000000     29279.000000   \n","mean             0.009324                    0.059838         0.754432   \n","std              0.096112                    0.237191         0.430431   \n","min              0.000000                    0.000000         0.000000   \n","25%              0.000000                    0.000000         1.000000   \n","50%              0.000000                    0.000000         1.000000   \n","75%              0.000000                    0.000000         1.000000   \n","max              1.000000                    1.000000         1.000000   \n","\n","       trans_Manual  \n","count  29279.000000  \n","mean       0.245568  \n","std        0.430431  \n","min        0.000000  \n","25%        0.000000  \n","50%        0.000000  \n","75%        0.000000  \n","max        1.000000  \n","\n","[8 rows x 40 columns]"],"text/html":["\n","  <div id=\"df-92732624-197d-441f-8644-138e20ad6de6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>price</th>\n","      <th>mileage</th>\n","      <th>BHP</th>\n","      <th>owners</th>\n","      <th>engine (L)</th>\n","      <th>C.year</th>\n","      <th>series_Bmw 1 Series</th>\n","      <th>series_Bmw 2 Series</th>\n","      <th>series_Bmw 2 Series Active Tourer</th>\n","      <th>...</th>\n","      <th>body_SUV</th>\n","      <th>body_Saloon</th>\n","      <th>fuel_Diesel</th>\n","      <th>fuel_Diesel Hybrid</th>\n","      <th>fuel_Electric</th>\n","      <th>fuel_Petrol</th>\n","      <th>fuel_Petrol Hybrid</th>\n","      <th>fuel_Petrol Plug-in Hybrid</th>\n","      <th>trans_Automatic</th>\n","      <th>trans_Manual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>...</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","      <td>29279.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>14639.000000</td>\n","      <td>19742.102736</td>\n","      <td>56751.890092</td>\n","      <td>218.757127</td>\n","      <td>2.964992</td>\n","      <td>2.251532</td>\n","      <td>2015.942314</td>\n","      <td>0.199119</td>\n","      <td>0.044059</td>\n","      <td>0.021346</td>\n","      <td>...</td>\n","      <td>0.194713</td>\n","      <td>0.279313</td>\n","      <td>0.550053</td>\n","      <td>0.029236</td>\n","      <td>0.000068</td>\n","      <td>0.351481</td>\n","      <td>0.009324</td>\n","      <td>0.059838</td>\n","      <td>0.754432</td>\n","      <td>0.245568</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>8452.263602</td>\n","      <td>11472.632279</td>\n","      <td>36374.985976</td>\n","      <td>80.704403</td>\n","      <td>0.948340</td>\n","      <td>0.568266</td>\n","      <td>3.661573</td>\n","      <td>0.399344</td>\n","      <td>0.205229</td>\n","      <td>0.144539</td>\n","      <td>...</td>\n","      <td>0.395986</td>\n","      <td>0.448669</td>\n","      <td>0.497497</td>\n","      <td>0.168470</td>\n","      <td>0.008265</td>\n","      <td>0.477441</td>\n","      <td>0.096112</td>\n","      <td>0.237191</td>\n","      <td>0.430431</td>\n","      <td>0.430431</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>750.000000</td>\n","      <td>10.000000</td>\n","      <td>26.165662</td>\n","      <td>2.000000</td>\n","      <td>0.600000</td>\n","      <td>2005.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>7319.500000</td>\n","      <td>11000.000000</td>\n","      <td>27351.500000</td>\n","      <td>168.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>2014.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>14639.000000</td>\n","      <td>17995.000000</td>\n","      <td>50000.000000</td>\n","      <td>190.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>2017.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>21958.500000</td>\n","      <td>25990.000000</td>\n","      <td>80000.000000</td>\n","      <td>265.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>2019.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>29278.000000</td>\n","      <td>114995.000000</td>\n","      <td>398000.000000</td>\n","      <td>798.346589</td>\n","      <td>13.000000</td>\n","      <td>6.600000</td>\n","      <td>2021.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows Ã 40 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92732624-197d-441f-8644-138e20ad6de6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-92732624-197d-441f-8644-138e20ad6de6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-92732624-197d-441f-8644-138e20ad6de6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":212}]},{"cell_type":"code","source":["features_full = ['mileage', 'BHP', 'owners', 'engine (L)',\n","       'C.year', 'series_Bmw 1 Series', 'series_Bmw 2 Series',\n","       'series_Bmw 2 Series Active Tourer', 'series_Bmw 2 Series Gran Coupe',\n","       'series_Bmw 3 Series', 'series_Bmw 4 Series',\n","       'series_Bmw 4 Series Gran Coupe', 'series_Bmw 5 Series',\n","       'series_Bmw 7 Series', 'series_Bmw I3', 'series_Bmw M3',\n","       'series_Bmw M4', 'series_Bmw X1', 'series_Bmw X2', 'series_Bmw X3',\n","       'series_Bmw X5', 'series_Bmw X6', 'series_Bmw Z4', 'body_Convertible',\n","       'body_Coupe', 'body_Estate', 'body_Hatchback', 'body_MPV', 'body_SUV',\n","       'body_Saloon', 'fuel_Diesel', 'fuel_Diesel Hybrid', 'fuel_Electric',\n","       'fuel_Petrol', 'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid',\n","       'trans_Automatic', 'trans_Manual']\n","\n","feature_cols = features_full\n","\n","# Split the data\n","X = james_df[feature_cols]\n","y = james_df['price']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","\n","# Scale the training set\n","scaler = StandardScaler()\n","scale_cols = ['mileage', 'BHP', 'owners', 'engine (L)', 'C.year']\n","X_train_scaled = X_train\n","X_train_scaled[scale_cols] = scaler.fit_transform(X_train_scaled[scale_cols])\n","\n","# Create model using training scaled, set\n","lin_reg = sm.OLS(y_train, X_train_scaled[feature_cols])\n","results = lin_reg.fit()\n","\n","# Transform the test data using the same scaler\n","X_test_scaled = X_test\n","X_test_scaled[scale_cols] = scaler.transform(X_test_scaled[scale_cols])\n","\n","# Create a predicted price for the test set and measure RMSE etc\n","X_test_scaled['y_pred'] = results.predict(X_test_scaled[feature_cols])\n","rmse = statsmodels.tools.eval_measures.rmse(np.exp(y_test), np.exp(X_test_scaled['y_pred']))\n","print(rmse)\n","results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"c73g2SWfJTcv","executionInfo":{"status":"ok","timestamp":1675959331984,"user_tz":0,"elapsed":480,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"6f8a72cd-a4f9-4a14-9358-661702e1665c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["nan\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/pandas/core/arraylike.py:364: RuntimeWarning: overflow encountered in exp\n","  result = getattr(ufunc, method)(*inputs, **kwargs)\n","/usr/local/lib/python3.8/dist-packages/statsmodels/tools/eval_measures.py:41: RuntimeWarning: invalid value encountered in subtract\n","  return np.mean((x1 - x2) ** 2, axis=axis)\n"]},{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                  price   R-squared:                       0.865\n","Model:                            OLS   Adj. R-squared:                  0.865\n","Method:                 Least Squares   F-statistic:                     4559.\n","Date:                Thu, 09 Feb 2023   Prob (F-statistic):               0.00\n","Time:                        16:15:31   Log-Likelihood:            -2.2880e+05\n","No. Observations:               23423   AIC:                         4.577e+05\n","Df Residuals:                   23389   BIC:                         4.579e+05\n","Df Model:                          33                                         \n","Covariance Type:            nonrobust                                         \n","=====================================================================================================\n","                                        coef    std err          t      P>|t|      [0.025      0.975]\n","-----------------------------------------------------------------------------------------------------\n","mileage                           -3071.2618     43.020    -71.392      0.000   -3155.584   -2986.940\n","BHP                                3032.6602     93.453     32.451      0.000    2849.485    3215.835\n","owners                              -49.1029     33.990     -1.445      0.149    -115.726      17.520\n","engine (L)                         -195.8887     84.491     -2.318      0.020    -361.497     -30.281\n","C.year                             5864.5098     50.132    116.981      0.000    5766.247    5962.772\n","series_Bmw 1 Series                 527.0231    456.134      1.155      0.248    -367.029    1421.075\n","series_Bmw 2 Series               -4190.2561    446.289     -9.389      0.000   -5065.012   -3315.500\n","series_Bmw 2 Series Active Tourer -5561.8502   3874.431     -1.436      0.151   -1.32e+04    2032.288\n","series_Bmw 2 Series Gran Coupe     1683.1821    522.114      3.224      0.001     659.804    2706.561\n","series_Bmw 3 Series                 733.3142    439.576      1.668      0.095    -128.284    1594.913\n","series_Bmw 4 Series               -1082.3881    442.677     -2.445      0.014   -1950.065    -214.711\n","series_Bmw 4 Series Gran Coupe     1317.2931    480.727      2.740      0.006     375.037    2259.549\n","series_Bmw 5 Series                1375.8772    447.616      3.074      0.002     498.521    2253.233\n","series_Bmw 7 Series                7384.3008    491.950     15.010      0.000    6420.046    8348.555\n","series_Bmw I3                      -805.7961   2522.901     -0.319      0.749   -5750.846    4139.254\n","series_Bmw M3                      1.124e+04    490.539     22.912      0.000    1.03e+04    1.22e+04\n","series_Bmw M4                      5472.0880    484.377     11.297      0.000    4522.678    6421.498\n","series_Bmw X1                     -3793.3387    134.983    -28.102      0.000   -4057.914   -3528.763\n","series_Bmw X2                     -3775.4027    204.570    -18.455      0.000   -4176.373   -3374.432\n","series_Bmw X3                      1098.4928    135.475      8.108      0.000     832.953    1364.033\n","series_Bmw X5                      6952.1300    128.211     54.224      0.000    6700.828    7203.432\n","series_Bmw X6                      6196.8051    205.082     30.216      0.000    5794.832    6598.778\n","series_Bmw Z4                      1434.6155    470.465      3.049      0.002     512.473    2356.758\n","body_Convertible                   3796.0362    625.359      6.070      0.000    2570.292    5021.780\n","body_Coupe                         4297.3878    624.149      6.885      0.000    3074.015    5520.761\n","body_Estate                        3852.2713    634.201      6.074      0.000    2609.196    5095.347\n","body_Hatchback                      928.7176    643.578      1.443      0.149    -332.737    2190.173\n","body_MPV                           4336.4132   3623.589      1.197      0.231   -2766.058    1.14e+04\n","body_SUV                           6678.6865    279.400     23.904      0.000    6131.044    7226.329\n","body_Saloon                        2315.6661    629.615      3.678      0.000    1081.580    3549.752\n","fuel_Diesel                        1649.7457    467.819      3.526      0.000     732.790    2566.701\n","fuel_Diesel Hybrid                 8091.7962    487.148     16.611      0.000    7136.955    9046.637\n","fuel_Electric                      2012.8975   2825.729      0.712      0.476   -3525.715    7551.510\n","fuel_Petrol                        1914.3152    467.278      4.097      0.000     998.420    2830.210\n","fuel_Petrol Hybrid                 8248.9254    516.134     15.982      0.000    7237.269    9260.582\n","fuel_Petrol Plug-in Hybrid         4287.4987    476.122      9.005      0.000    3354.268    5220.730\n","trans_Automatic                    1.335e+04    345.530     38.628      0.000    1.27e+04     1.4e+04\n","trans_Manual                       1.286e+04    348.377     36.908      0.000    1.22e+04    1.35e+04\n","==============================================================================\n","Omnibus:                    15421.801   Durbin-Watson:                   1.995\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):           753566.979\n","Skew:                           2.555   Prob(JB):                         0.00\n","Kurtosis:                      30.313   Cond. No.                     1.49e+16\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The smallest eigenvalue is 2.36e-28. This might indicate that there are\n","strong multicollinearity problems or that the design matrix is singular.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared:         </th>  <td>   0.865</td>  \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.865</td>  \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   4559.</td>  \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Thu, 09 Feb 2023</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>16:15:31</td>     <th>  Log-Likelihood:    </th> <td>-2.2880e+05</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 23423</td>      <th>  AIC:               </th>  <td>4.577e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 23389</td>      <th>  BIC:               </th>  <td>4.579e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    33</td>      <th>                     </th>      <td> </td>     \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                  <td></td>                     <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>mileage</th>                           <td>-3071.2618</td> <td>   43.020</td> <td>  -71.392</td> <td> 0.000</td> <td>-3155.584</td> <td>-2986.940</td>\n","</tr>\n","<tr>\n","  <th>BHP</th>                               <td> 3032.6602</td> <td>   93.453</td> <td>   32.451</td> <td> 0.000</td> <td> 2849.485</td> <td> 3215.835</td>\n","</tr>\n","<tr>\n","  <th>owners</th>                            <td>  -49.1029</td> <td>   33.990</td> <td>   -1.445</td> <td> 0.149</td> <td> -115.726</td> <td>   17.520</td>\n","</tr>\n","<tr>\n","  <th>engine (L)</th>                        <td> -195.8887</td> <td>   84.491</td> <td>   -2.318</td> <td> 0.020</td> <td> -361.497</td> <td>  -30.281</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                            <td> 5864.5098</td> <td>   50.132</td> <td>  116.981</td> <td> 0.000</td> <td> 5766.247</td> <td> 5962.772</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 1 Series</th>               <td>  527.0231</td> <td>  456.134</td> <td>    1.155</td> <td> 0.248</td> <td> -367.029</td> <td> 1421.075</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 2 Series</th>               <td>-4190.2561</td> <td>  446.289</td> <td>   -9.389</td> <td> 0.000</td> <td>-5065.012</td> <td>-3315.500</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 2 Series Active Tourer</th> <td>-5561.8502</td> <td> 3874.431</td> <td>   -1.436</td> <td> 0.151</td> <td>-1.32e+04</td> <td> 2032.288</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 2 Series Gran Coupe</th>    <td> 1683.1821</td> <td>  522.114</td> <td>    3.224</td> <td> 0.001</td> <td>  659.804</td> <td> 2706.561</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 3 Series</th>               <td>  733.3142</td> <td>  439.576</td> <td>    1.668</td> <td> 0.095</td> <td> -128.284</td> <td> 1594.913</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 4 Series</th>               <td>-1082.3881</td> <td>  442.677</td> <td>   -2.445</td> <td> 0.014</td> <td>-1950.065</td> <td> -214.711</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 4 Series Gran Coupe</th>    <td> 1317.2931</td> <td>  480.727</td> <td>    2.740</td> <td> 0.006</td> <td>  375.037</td> <td> 2259.549</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 5 Series</th>               <td> 1375.8772</td> <td>  447.616</td> <td>    3.074</td> <td> 0.002</td> <td>  498.521</td> <td> 2253.233</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 7 Series</th>               <td> 7384.3008</td> <td>  491.950</td> <td>   15.010</td> <td> 0.000</td> <td> 6420.046</td> <td> 8348.555</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw I3</th>                     <td> -805.7961</td> <td> 2522.901</td> <td>   -0.319</td> <td> 0.749</td> <td>-5750.846</td> <td> 4139.254</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw M3</th>                     <td> 1.124e+04</td> <td>  490.539</td> <td>   22.912</td> <td> 0.000</td> <td> 1.03e+04</td> <td> 1.22e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw M4</th>                     <td> 5472.0880</td> <td>  484.377</td> <td>   11.297</td> <td> 0.000</td> <td> 4522.678</td> <td> 6421.498</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X1</th>                     <td>-3793.3387</td> <td>  134.983</td> <td>  -28.102</td> <td> 0.000</td> <td>-4057.914</td> <td>-3528.763</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X2</th>                     <td>-3775.4027</td> <td>  204.570</td> <td>  -18.455</td> <td> 0.000</td> <td>-4176.373</td> <td>-3374.432</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X3</th>                     <td> 1098.4928</td> <td>  135.475</td> <td>    8.108</td> <td> 0.000</td> <td>  832.953</td> <td> 1364.033</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X5</th>                     <td> 6952.1300</td> <td>  128.211</td> <td>   54.224</td> <td> 0.000</td> <td> 6700.828</td> <td> 7203.432</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X6</th>                     <td> 6196.8051</td> <td>  205.082</td> <td>   30.216</td> <td> 0.000</td> <td> 5794.832</td> <td> 6598.778</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw Z4</th>                     <td> 1434.6155</td> <td>  470.465</td> <td>    3.049</td> <td> 0.002</td> <td>  512.473</td> <td> 2356.758</td>\n","</tr>\n","<tr>\n","  <th>body_Convertible</th>                  <td> 3796.0362</td> <td>  625.359</td> <td>    6.070</td> <td> 0.000</td> <td> 2570.292</td> <td> 5021.780</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                        <td> 4297.3878</td> <td>  624.149</td> <td>    6.885</td> <td> 0.000</td> <td> 3074.015</td> <td> 5520.761</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                       <td> 3852.2713</td> <td>  634.201</td> <td>    6.074</td> <td> 0.000</td> <td> 2609.196</td> <td> 5095.347</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>                    <td>  928.7176</td> <td>  643.578</td> <td>    1.443</td> <td> 0.149</td> <td> -332.737</td> <td> 2190.173</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                          <td> 4336.4132</td> <td> 3623.589</td> <td>    1.197</td> <td> 0.231</td> <td>-2766.058</td> <td> 1.14e+04</td>\n","</tr>\n","<tr>\n","  <th>body_SUV</th>                          <td> 6678.6865</td> <td>  279.400</td> <td>   23.904</td> <td> 0.000</td> <td> 6131.044</td> <td> 7226.329</td>\n","</tr>\n","<tr>\n","  <th>body_Saloon</th>                       <td> 2315.6661</td> <td>  629.615</td> <td>    3.678</td> <td> 0.000</td> <td> 1081.580</td> <td> 3549.752</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel</th>                       <td> 1649.7457</td> <td>  467.819</td> <td>    3.526</td> <td> 0.000</td> <td>  732.790</td> <td> 2566.701</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>                <td> 8091.7962</td> <td>  487.148</td> <td>   16.611</td> <td> 0.000</td> <td> 7136.955</td> <td> 9046.637</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>                     <td> 2012.8975</td> <td> 2825.729</td> <td>    0.712</td> <td> 0.476</td> <td>-3525.715</td> <td> 7551.510</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                       <td> 1914.3152</td> <td>  467.278</td> <td>    4.097</td> <td> 0.000</td> <td>  998.420</td> <td> 2830.210</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>                <td> 8248.9254</td> <td>  516.134</td> <td>   15.982</td> <td> 0.000</td> <td> 7237.269</td> <td> 9260.582</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th>        <td> 4287.4987</td> <td>  476.122</td> <td>    9.005</td> <td> 0.000</td> <td> 3354.268</td> <td> 5220.730</td>\n","</tr>\n","<tr>\n","  <th>trans_Automatic</th>                   <td> 1.335e+04</td> <td>  345.530</td> <td>   38.628</td> <td> 0.000</td> <td> 1.27e+04</td> <td>  1.4e+04</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>                      <td> 1.286e+04</td> <td>  348.377</td> <td>   36.908</td> <td> 0.000</td> <td> 1.22e+04</td> <td> 1.35e+04</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>15421.801</td> <th>  Durbin-Watson:     </th>  <td>   1.995</td> \n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>753566.979</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 2.555</td>   <th>  Prob(JB):          </th>  <td>    0.00</td> \n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td>30.313</td>   <th>  Cond. No.          </th>  <td>1.49e+16</td> \n","</tr>\n","</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 2.36e-28. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."]},"metadata":{},"execution_count":210}]},{"cell_type":"code","source":["# Visualise fit\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(y_test))\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(X_test_scaled['y_pred']))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":364},"id":"Njzu5-s8j9mA","executionInfo":{"status":"ok","timestamp":1675959731086,"user_tz":0,"elapsed":706,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"fcb0287d-1fd2-4609-e6c0-4543337ae081"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/pandas/core/arraylike.py:364: RuntimeWarning: overflow encountered in exp\n","  result = getattr(ufunc, method)(*inputs, **kwargs)\n","/usr/local/lib/python3.8/dist-packages/pandas/core/arraylike.py:364: RuntimeWarning: overflow encountered in exp\n","  result = getattr(ufunc, method)(*inputs, **kwargs)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Inspect VIF values\n","from statsmodels.stats.outliers_influence import variance_inflation_factor # a module to evaluate the variance inflation factor (VIF)\n","pd.Series([variance_inflation_factor(X_train_scaled[feature_cols].values, i) for i in range(X_train_scaled[feature_cols].shape[1])], index = X_train_scaled[feature_cols].columns)\n"],"metadata":{"id":"BgOiUNXrlMM5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Drop high VIF values\n","def calculate_vif(X, thresh = 5.0):\n","    variables = list(range(X.shape[1]))\n","    dropped = True\n","    while dropped:\n","        dropped = False\n","        # this bit uses list comprehension to gather all the VIF values of the different variables\n","        vif = [variance_inflation_factor(X.iloc[:, variables].values, ix)\n","               for ix in range(X.iloc[:, variables].shape[1])]\n","        \n","        maxloc = vif.index(max(vif)) # getting the index of the highest VIF value\n","        if max(vif) > thresh:\n","            print('dropping \\'' + X.iloc[:, variables].columns[maxloc] +\n","                  '\\' at index: ' + str(maxloc))\n","            del variables[maxloc] # we delete the highest VIF value on condition that it's higher than the threshold\n","            dropped = True # if we deleted anything, we set the 'dropped' value to True to stay in the while loop\n","\n","    print('Remaining variables:')\n","    print(X.columns[variables]) # finally, we print the variables that are still in our set\n","    #return X.iloc[:, variables] # and return our X cut down to the remaining variables\n","\n","calculate_vif(X_train_scaled[feature_cols])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tIhDlEWYljm4","executionInfo":{"status":"ok","timestamp":1675953312565,"user_tz":0,"elapsed":34893,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"2320ed6c-168c-471e-d928-924beb993f85"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dropping 'series_Bmw 1 Series' at index: 5\n","dropping 'series_Bmw X1' at index: 16\n","dropping 'body_Convertible' at index: 21\n","dropping 'fuel_Diesel' at index: 27\n","dropping 'series_Bmw 2 Series Active Tourer' at index: 6\n","dropping 'trans_Automatic' at index: 31\n","dropping 'body_Saloon' at index: 25\n","dropping 'BHP' at index: 1\n","Remaining variables:\n","Index(['mileage', 'owners', 'engine (L)', 'C.year', 'series_Bmw 2 Series',\n","       'series_Bmw 2 Series Gran Coupe', 'series_Bmw 3 Series',\n","       'series_Bmw 4 Series', 'series_Bmw 4 Series Gran Coupe',\n","       'series_Bmw 5 Series', 'series_Bmw 7 Series', 'series_Bmw I3',\n","       'series_Bmw M3', 'series_Bmw M4', 'series_Bmw X2', 'series_Bmw X3',\n","       'series_Bmw X5', 'series_Bmw X6', 'series_Bmw Z4', 'body_Coupe',\n","       'body_Estate', 'body_Hatchback', 'body_MPV', 'body_SUV',\n","       'fuel_Diesel Hybrid', 'fuel_Electric', 'fuel_Petrol',\n","       'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid', 'trans_Manual'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["X_test_scaled.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"sK1exw4JmmKq","executionInfo":{"status":"ok","timestamp":1675953730477,"user_tz":0,"elapsed":223,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"d7eecbef-d707-47a8-cdd7-06cd435f9e72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        mileage       BHP    owners  engine (L)    C.year  \\\n","644    1.419898 -0.626724  1.084120   -0.442720 -1.347047   \n","19825 -0.189800  0.525563  0.032157    1.315861  0.565122   \n","29230 -1.220120  0.488393 -1.019807   -0.442720  1.111456   \n","5705  -0.996576 -1.023210 -1.019807   -1.322010  1.384623   \n","17780 -1.453069  1.863703 -1.019807    1.315861  1.384623   \n","\n","       series_Bmw 1 Series  series_Bmw 2 Series  \\\n","644                      1                    0   \n","19825                    0                    0   \n","29230                    0                    0   \n","5705                     1                    0   \n","17780                    0                    0   \n","\n","       series_Bmw 2 Series Active Tourer  series_Bmw 2 Series Gran Coupe  \\\n","644                                    0                               0   \n","19825                                  0                               0   \n","29230                                  0                               0   \n","5705                                   0                               0   \n","17780                                  0                               0   \n","\n","       series_Bmw 3 Series  ...  body_Saloon  fuel_Diesel  fuel_Diesel Hybrid  \\\n","644                      0  ...            0            0                   0   \n","19825                    0  ...            1            1                   0   \n","29230                    0  ...            0            0                   0   \n","5705                     0  ...            0            0                   0   \n","17780                    0  ...            0            0                   0   \n","\n","       fuel_Electric  fuel_Petrol  fuel_Petrol Hybrid  \\\n","644                0            1                   0   \n","19825              0            0                   0   \n","29230              0            1                   0   \n","5705               0            1                   0   \n","17780              0            0                   1   \n","\n","       fuel_Petrol Plug-in Hybrid  trans_Automatic  trans_Manual     y_pred  \n","644                             0                0             1   8.572991  \n","19825                           0                1             0  10.111708  \n","29230                           0                1             0  10.540659  \n","5705                            0                1             0  10.186936  \n","17780                           0                1             0  10.815975  \n","\n","[5 rows x 39 columns]"],"text/html":["\n","  <div id=\"df-dc8c5039-663b-4e6d-86b8-af03cc948ac6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mileage</th>\n","      <th>BHP</th>\n","      <th>owners</th>\n","      <th>engine (L)</th>\n","      <th>C.year</th>\n","      <th>series_Bmw 1 Series</th>\n","      <th>series_Bmw 2 Series</th>\n","      <th>series_Bmw 2 Series Active Tourer</th>\n","      <th>series_Bmw 2 Series Gran Coupe</th>\n","      <th>series_Bmw 3 Series</th>\n","      <th>...</th>\n","      <th>body_Saloon</th>\n","      <th>fuel_Diesel</th>\n","      <th>fuel_Diesel Hybrid</th>\n","      <th>fuel_Electric</th>\n","      <th>fuel_Petrol</th>\n","      <th>fuel_Petrol Hybrid</th>\n","      <th>fuel_Petrol Plug-in Hybrid</th>\n","      <th>trans_Automatic</th>\n","      <th>trans_Manual</th>\n","      <th>y_pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>644</th>\n","      <td>1.419898</td>\n","      <td>-0.626724</td>\n","      <td>1.084120</td>\n","      <td>-0.442720</td>\n","      <td>-1.347047</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>8.572991</td>\n","    </tr>\n","    <tr>\n","      <th>19825</th>\n","      <td>-0.189800</td>\n","      <td>0.525563</td>\n","      <td>0.032157</td>\n","      <td>1.315861</td>\n","      <td>0.565122</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>10.111708</td>\n","    </tr>\n","    <tr>\n","      <th>29230</th>\n","      <td>-1.220120</td>\n","      <td>0.488393</td>\n","      <td>-1.019807</td>\n","      <td>-0.442720</td>\n","      <td>1.111456</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>10.540659</td>\n","    </tr>\n","    <tr>\n","      <th>5705</th>\n","      <td>-0.996576</td>\n","      <td>-1.023210</td>\n","      <td>-1.019807</td>\n","      <td>-1.322010</td>\n","      <td>1.384623</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>10.186936</td>\n","    </tr>\n","    <tr>\n","      <th>17780</th>\n","      <td>-1.453069</td>\n","      <td>1.863703</td>\n","      <td>-1.019807</td>\n","      <td>1.315861</td>\n","      <td>1.384623</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>10.815975</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã 39 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc8c5039-663b-4e6d-86b8-af03cc948ac6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dc8c5039-663b-4e6d-86b8-af03cc948ac6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dc8c5039-663b-4e6d-86b8-af03cc948ac6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":146}]},{"cell_type":"code","source":["# Create new feature list after VIF testing\n","features_VIF = ['mileage', 'owners', 'engine (L)', 'C.year', 'series_Bmw 2 Series',\n","       'series_Bmw 2 Series Gran Coupe', 'series_Bmw 3 Series',\n","       'series_Bmw 4 Series', 'series_Bmw 4 Series Gran Coupe',\n","       'series_Bmw 5 Series', 'series_Bmw 7 Series', 'series_Bmw I3',\n","       'series_Bmw M3', 'series_Bmw M4', 'series_Bmw X2', 'series_Bmw X3',\n","       'series_Bmw X5', 'series_Bmw X6', 'series_Bmw Z4', 'body_Coupe',\n","       'body_Estate', 'body_Hatchback', 'body_MPV', 'body_SUV',\n","       'fuel_Diesel Hybrid', 'fuel_Electric', 'fuel_Petrol',\n","       'fuel_Petrol Hybrid', 'fuel_Petrol Plug-in Hybrid', 'trans_Manual']\n","feature_cols = features_VIF\n","\n","# Recalculate model using training scaled, set AND reduced features\n","lin_reg = sm.OLS(y_train, X_train_scaled[feature_cols])\n","results = lin_reg.fit()\n","X_train_scaled['y_pred'] = results.predict(X_train_scaled[feature_cols])\n","rmse = statsmodels.tools.eval_measures.rmse(y_train, X_train_scaled['y_pred'])\n","print(rmse)\n","# Run model on test data using VIF reduced feature cols, test RMSE etc\n","X_test_scaled['y_pred'] = results.predict(X_test_scaled[feature_cols])\n","rmse = statsmodels.tools.eval_measures.rmse(y_test, X_test_scaled['y_pred'])\n","print(rmse)\n","results.summary()"],"metadata":{"id":"LTksw4cMlumT","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1675959462609,"user_tz":0,"elapsed":29,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"ff7057e4-99e2-413f-f289-f0bf1c0a6c06"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4917.601177571084\n","4826.498614135269\n"]},{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                 OLS Regression Results                                \n","=======================================================================================\n","Dep. Variable:                  price   R-squared (uncentered):                   0.954\n","Model:                            OLS   Adj. R-squared (uncentered):              0.954\n","Method:                 Least Squares   F-statistic:                          1.604e+04\n","Date:                Thu, 09 Feb 2023   Prob (F-statistic):                        0.00\n","Time:                        16:17:42   Log-Likelihood:                     -2.3234e+05\n","No. Observations:               23423   AIC:                                  4.647e+05\n","Df Residuals:                   23393   BIC:                                  4.650e+05\n","Df Model:                          30                                                  \n","Covariance Type:            nonrobust                                                  \n","==================================================================================================\n","                                     coef    std err          t      P>|t|      [0.025      0.975]\n","--------------------------------------------------------------------------------------------------\n","mileage                        -3219.8795     49.684    -64.807      0.000   -3317.264   -3122.496\n","owners                           -16.1808     39.448     -0.410      0.682     -93.501      61.140\n","engine (L)                      2104.8053     45.414     46.347      0.000    2015.791    2193.819\n","C.year                          5758.5322     54.593    105.482      0.000    5651.527    5865.538\n","series_Bmw 2 Series               1.1e+04    190.874     57.653      0.000    1.06e+04    1.14e+04\n","series_Bmw 2 Series Gran Coupe    1.8e+04    355.093     50.704      0.000    1.73e+04    1.87e+04\n","series_Bmw 3 Series             1.673e+04     84.871    197.071      0.000    1.66e+04    1.69e+04\n","series_Bmw 4 Series             1.491e+04    159.188     93.650      0.000    1.46e+04    1.52e+04\n","series_Bmw 4 Series Gran Coupe  1802.5046    201.291      8.955      0.000    1407.961    2197.048\n","series_Bmw 5 Series               1.8e+04    107.402    167.632      0.000    1.78e+04    1.82e+04\n","series_Bmw 7 Series             2.385e+04    265.944     89.666      0.000    2.33e+04    2.44e+04\n","series_Bmw I3                  -1890.4139   3127.165     -0.605      0.546   -8019.861    4239.034\n","series_Bmw M3                   2.987e+04    292.229    102.200      0.000    2.93e+04    3.04e+04\n","series_Bmw M4                   2.579e+04    246.749    104.503      0.000    2.53e+04    2.63e+04\n","series_Bmw X2                   -154.3847    297.408     -0.519      0.604    -737.323     428.554\n","series_Bmw X3                   5409.2916    210.438     25.705      0.000    4996.819    5821.764\n","series_Bmw X5                    1.18e+04    207.723     56.818      0.000    1.14e+04    1.22e+04\n","series_Bmw X6                   1.121e+04    309.253     36.247      0.000    1.06e+04    1.18e+04\n","series_Bmw Z4                   1.791e+04    239.931     74.649      0.000    1.74e+04    1.84e+04\n","body_Coupe                      3553.9311    139.113     25.547      0.000    3281.261    3826.602\n","body_Estate                     1726.1264    131.781     13.098      0.000    1467.826    1984.426\n","body_Hatchback                  1.469e+04    100.651    145.987      0.000    1.45e+04    1.49e+04\n","body_MPV                        1.205e+04    227.918     52.866      0.000    1.16e+04    1.25e+04\n","body_SUV                        1.664e+04    148.780    111.842      0.000    1.63e+04    1.69e+04\n","fuel_Diesel Hybrid              7424.4935    206.598     35.937      0.000    7019.548    7829.439\n","fuel_Electric                   5795.4240   3814.970      1.519      0.129   -1682.167    1.33e+04\n","fuel_Petrol                     1914.3908     81.852     23.389      0.000    1753.956    2074.825\n","fuel_Petrol Hybrid              8371.0477    343.576     24.364      0.000    7697.616    9044.479\n","fuel_Petrol Plug-in Hybrid      5110.3524    152.442     33.523      0.000    4811.557    5409.148\n","trans_Manual                     406.0058     89.384      4.542      0.000     230.808     581.203\n","==============================================================================\n","Omnibus:                    14346.027   Durbin-Watson:                   2.000\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):           449694.307\n","Skew:                           2.430   Prob(JB):                         0.00\n","Kurtosis:                      23.908   Cond. No.                         193.\n","==============================================================================\n","\n","Notes:\n","[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.\n","[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared (uncentered):</th>       <td>   0.954</td>  \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared (uncentered):</th>  <td>   0.954</td>  \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>           <td>1.604e+04</td> \n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Thu, 09 Feb 2023</td> <th>  Prob (F-statistic):</th>            <td>  0.00</td>   \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>16:17:42</td>     <th>  Log-Likelihood:    </th>          <td>-2.3234e+05</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 23423</td>      <th>  AIC:               </th>           <td>4.647e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 23393</td>      <th>  BIC:               </th>           <td>4.650e+05</td> \n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    30</td>      <th>                     </th>               <td> </td>     \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>               <td> </td>     \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                 <td></td>                   <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>mileage</th>                        <td>-3219.8795</td> <td>   49.684</td> <td>  -64.807</td> <td> 0.000</td> <td>-3317.264</td> <td>-3122.496</td>\n","</tr>\n","<tr>\n","  <th>owners</th>                         <td>  -16.1808</td> <td>   39.448</td> <td>   -0.410</td> <td> 0.682</td> <td>  -93.501</td> <td>   61.140</td>\n","</tr>\n","<tr>\n","  <th>engine (L)</th>                     <td> 2104.8053</td> <td>   45.414</td> <td>   46.347</td> <td> 0.000</td> <td> 2015.791</td> <td> 2193.819</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                         <td> 5758.5322</td> <td>   54.593</td> <td>  105.482</td> <td> 0.000</td> <td> 5651.527</td> <td> 5865.538</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 2 Series</th>            <td>   1.1e+04</td> <td>  190.874</td> <td>   57.653</td> <td> 0.000</td> <td> 1.06e+04</td> <td> 1.14e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 2 Series Gran Coupe</th> <td>   1.8e+04</td> <td>  355.093</td> <td>   50.704</td> <td> 0.000</td> <td> 1.73e+04</td> <td> 1.87e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 3 Series</th>            <td> 1.673e+04</td> <td>   84.871</td> <td>  197.071</td> <td> 0.000</td> <td> 1.66e+04</td> <td> 1.69e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 4 Series</th>            <td> 1.491e+04</td> <td>  159.188</td> <td>   93.650</td> <td> 0.000</td> <td> 1.46e+04</td> <td> 1.52e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 4 Series Gran Coupe</th> <td> 1802.5046</td> <td>  201.291</td> <td>    8.955</td> <td> 0.000</td> <td> 1407.961</td> <td> 2197.048</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 5 Series</th>            <td>   1.8e+04</td> <td>  107.402</td> <td>  167.632</td> <td> 0.000</td> <td> 1.78e+04</td> <td> 1.82e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 7 Series</th>            <td> 2.385e+04</td> <td>  265.944</td> <td>   89.666</td> <td> 0.000</td> <td> 2.33e+04</td> <td> 2.44e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw I3</th>                  <td>-1890.4139</td> <td> 3127.165</td> <td>   -0.605</td> <td> 0.546</td> <td>-8019.861</td> <td> 4239.034</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw M3</th>                  <td> 2.987e+04</td> <td>  292.229</td> <td>  102.200</td> <td> 0.000</td> <td> 2.93e+04</td> <td> 3.04e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw M4</th>                  <td> 2.579e+04</td> <td>  246.749</td> <td>  104.503</td> <td> 0.000</td> <td> 2.53e+04</td> <td> 2.63e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X2</th>                  <td> -154.3847</td> <td>  297.408</td> <td>   -0.519</td> <td> 0.604</td> <td> -737.323</td> <td>  428.554</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X3</th>                  <td> 5409.2916</td> <td>  210.438</td> <td>   25.705</td> <td> 0.000</td> <td> 4996.819</td> <td> 5821.764</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X5</th>                  <td>  1.18e+04</td> <td>  207.723</td> <td>   56.818</td> <td> 0.000</td> <td> 1.14e+04</td> <td> 1.22e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X6</th>                  <td> 1.121e+04</td> <td>  309.253</td> <td>   36.247</td> <td> 0.000</td> <td> 1.06e+04</td> <td> 1.18e+04</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw Z4</th>                  <td> 1.791e+04</td> <td>  239.931</td> <td>   74.649</td> <td> 0.000</td> <td> 1.74e+04</td> <td> 1.84e+04</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                     <td> 3553.9311</td> <td>  139.113</td> <td>   25.547</td> <td> 0.000</td> <td> 3281.261</td> <td> 3826.602</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                    <td> 1726.1264</td> <td>  131.781</td> <td>   13.098</td> <td> 0.000</td> <td> 1467.826</td> <td> 1984.426</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>                 <td> 1.469e+04</td> <td>  100.651</td> <td>  145.987</td> <td> 0.000</td> <td> 1.45e+04</td> <td> 1.49e+04</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                       <td> 1.205e+04</td> <td>  227.918</td> <td>   52.866</td> <td> 0.000</td> <td> 1.16e+04</td> <td> 1.25e+04</td>\n","</tr>\n","<tr>\n","  <th>body_SUV</th>                       <td> 1.664e+04</td> <td>  148.780</td> <td>  111.842</td> <td> 0.000</td> <td> 1.63e+04</td> <td> 1.69e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>             <td> 7424.4935</td> <td>  206.598</td> <td>   35.937</td> <td> 0.000</td> <td> 7019.548</td> <td> 7829.439</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>                  <td> 5795.4240</td> <td> 3814.970</td> <td>    1.519</td> <td> 0.129</td> <td>-1682.167</td> <td> 1.33e+04</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                    <td> 1914.3908</td> <td>   81.852</td> <td>   23.389</td> <td> 0.000</td> <td> 1753.956</td> <td> 2074.825</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>             <td> 8371.0477</td> <td>  343.576</td> <td>   24.364</td> <td> 0.000</td> <td> 7697.616</td> <td> 9044.479</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th>     <td> 5110.3524</td> <td>  152.442</td> <td>   33.523</td> <td> 0.000</td> <td> 4811.557</td> <td> 5409.148</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>                   <td>  406.0058</td> <td>   89.384</td> <td>    4.542</td> <td> 0.000</td> <td>  230.808</td> <td>  581.203</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>14346.027</td> <th>  Durbin-Watson:     </th>  <td>   2.000</td> \n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>449694.307</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 2.430</td>   <th>  Prob(JB):          </th>  <td>    0.00</td> \n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td>23.908</td>   <th>  Cond. No.          </th>  <td>    193.</td> \n","</tr>\n","</table><br/><br/>Notes:<br/>[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.<br/>[2] Standard Errors assume that the covariance matrix of the errors is correctly specified."]},"metadata":{},"execution_count":214}]},{"cell_type":"code","source":["# Visualise fit without exp to identify value of outliers\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = y_test)\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = X_test_scaled['y_pred'])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"6TdmcB6MojLw","executionInfo":{"status":"ok","timestamp":1675959494269,"user_tz":0,"elapsed":524,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"817920b1-5347-438d-e96f-5072c7c6ea03"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["outlier_idx = X_test_scaled[X_test_scaled['y_pred']>12.5].index\n","X_test_scaled.drop(outlier_idx, inplace=True, axis=0)\n","y_test.drop(outlier_idx, inplace=True, axis=0)"],"metadata":{"id":"sO4Xrsvzo2e0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Visualise fit outliers removed\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(y_test))\n","sns.scatterplot(x = X_test_scaled['mileage'],\n","                y = np.exp(X_test_scaled['y_pred']))\n","plt.show()\n","rmse = statsmodels.tools.eval_measures.rmse(np.exp(y_train), np.exp(X_train_scaled['y_pred']))\n","print(rmse)\n","# Run model on test data using VIF reduced feature cols, test RMSE etc\n","rmse = statsmodels.tools.eval_measures.rmse(np.exp(y_test), np.exp(X_test_scaled['y_pred']))\n","print(rmse)\n","results.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"XKLDzVHFpSr9","executionInfo":{"status":"ok","timestamp":1675959194977,"user_tz":0,"elapsed":496,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"d71471f6-4af1-49b1-feda-c6a21a546def"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["913602.5753637705\n","10946.058712130578\n"]},{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                 OLS Regression Results                                \n","=======================================================================================\n","Dep. Variable:                  price   R-squared (uncentered):                   0.984\n","Model:                            OLS   Adj. R-squared (uncentered):              0.984\n","Method:                 Least Squares   F-statistic:                          4.940e+04\n","Date:                Thu, 09 Feb 2023   Prob (F-statistic):                        0.00\n","Time:                        16:13:14   Log-Likelihood:                         -37754.\n","No. Observations:               23423   AIC:                                  7.557e+04\n","Df Residuals:                   23393   BIC:                                  7.581e+04\n","Df Model:                          30                                                  \n","Covariance Type:            nonrobust                                                  \n","==================================================================================================\n","                                     coef    std err          t      P>|t|      [0.025      0.975]\n","--------------------------------------------------------------------------------------------------\n","mileage                           -0.2830      0.012    -23.093      0.000      -0.307      -0.259\n","owners                             0.0161      0.010      1.653      0.098      -0.003       0.035\n","engine (L)                         0.0405      0.011      3.614      0.000       0.019       0.062\n","C.year                             0.1672      0.013     12.420      0.000       0.141       0.194\n","series_Bmw 2 Series                8.0891      0.047    171.844      0.000       7.997       8.181\n","series_Bmw 2 Series Gran Coupe     9.3749      0.088    107.055      0.000       9.203       9.547\n","series_Bmw 3 Series                9.1782      0.021    438.510      0.000       9.137       9.219\n","series_Bmw 4 Series                8.5498      0.039    217.782      0.000       8.473       8.627\n","series_Bmw 4 Series Gran Coupe     0.5874      0.050     11.834      0.000       0.490       0.685\n","series_Bmw 5 Series                9.5228      0.026    359.528      0.000       9.471       9.575\n","series_Bmw 7 Series                9.8635      0.066    150.390      0.000       9.735       9.992\n","series_Bmw I3                      0.2982      0.771      0.387      0.699      -1.213       1.810\n","series_Bmw M3                      9.4810      0.072    131.555      0.000       9.340       9.622\n","series_Bmw M4                      8.7830      0.061    144.333      0.000       8.664       8.902\n","series_Bmw X2                      0.0699      0.073      0.953      0.340      -0.074       0.214\n","series_Bmw X3                      0.3981      0.052      7.671      0.000       0.296       0.500\n","series_Bmw X5                      0.7346      0.051     14.340      0.000       0.634       0.835\n","series_Bmw X6                      0.7707      0.076     10.105      0.000       0.621       0.920\n","series_Bmw Z4                      8.9521      0.059    151.292      0.000       8.836       9.068\n","body_Coupe                         1.4679      0.034     42.785      0.000       1.401       1.535\n","body_Estate                        0.2738      0.032      8.425      0.000       0.210       0.338\n","body_Hatchback                     8.9921      0.025    362.261      0.000       8.943       9.041\n","body_MPV                           9.0799      0.056    161.540      0.000       8.970       9.190\n","body_SUV                           9.3452      0.037    254.697      0.000       9.273       9.417\n","fuel_Diesel Hybrid                 0.4471      0.051      8.775      0.000       0.347       0.547\n","fuel_Electric                      0.5968      0.941      0.634      0.526      -1.247       2.441\n","fuel_Petrol                        0.3770      0.020     18.676      0.000       0.337       0.417\n","fuel_Petrol Hybrid                 0.3705      0.085      4.372      0.000       0.204       0.537\n","fuel_Petrol Plug-in Hybrid         0.5535      0.038     14.723      0.000       0.480       0.627\n","trans_Manual                       0.4770      0.022     21.641      0.000       0.434       0.520\n","==============================================================================\n","Omnibus:                    23345.765   Durbin-Watson:                   1.955\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):          1133369.850\n","Skew:                           5.032   Prob(JB):                         0.00\n","Kurtosis:                      35.558   Cond. No.                         193.\n","==============================================================================\n","\n","Notes:\n","[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.\n","[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared (uncentered):</th>      <td>   0.984</td> \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared (uncentered):</th> <td>   0.984</td> \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>          <td>4.940e+04</td>\n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Thu, 09 Feb 2023</td> <th>  Prob (F-statistic):</th>           <td>  0.00</td>  \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>16:13:14</td>     <th>  Log-Likelihood:    </th>          <td> -37754.</td> \n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td> 23423</td>      <th>  AIC:               </th>          <td>7.557e+04</td>\n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td> 23393</td>      <th>  BIC:               </th>          <td>7.581e+04</td>\n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>    30</td>      <th>                     </th>              <td> </td>    \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>              <td> </td>    \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                 <td></td>                   <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>mileage</th>                        <td>   -0.2830</td> <td>    0.012</td> <td>  -23.093</td> <td> 0.000</td> <td>   -0.307</td> <td>   -0.259</td>\n","</tr>\n","<tr>\n","  <th>owners</th>                         <td>    0.0161</td> <td>    0.010</td> <td>    1.653</td> <td> 0.098</td> <td>   -0.003</td> <td>    0.035</td>\n","</tr>\n","<tr>\n","  <th>engine (L)</th>                     <td>    0.0405</td> <td>    0.011</td> <td>    3.614</td> <td> 0.000</td> <td>    0.019</td> <td>    0.062</td>\n","</tr>\n","<tr>\n","  <th>C.year</th>                         <td>    0.1672</td> <td>    0.013</td> <td>   12.420</td> <td> 0.000</td> <td>    0.141</td> <td>    0.194</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 2 Series</th>            <td>    8.0891</td> <td>    0.047</td> <td>  171.844</td> <td> 0.000</td> <td>    7.997</td> <td>    8.181</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 2 Series Gran Coupe</th> <td>    9.3749</td> <td>    0.088</td> <td>  107.055</td> <td> 0.000</td> <td>    9.203</td> <td>    9.547</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 3 Series</th>            <td>    9.1782</td> <td>    0.021</td> <td>  438.510</td> <td> 0.000</td> <td>    9.137</td> <td>    9.219</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 4 Series</th>            <td>    8.5498</td> <td>    0.039</td> <td>  217.782</td> <td> 0.000</td> <td>    8.473</td> <td>    8.627</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 4 Series Gran Coupe</th> <td>    0.5874</td> <td>    0.050</td> <td>   11.834</td> <td> 0.000</td> <td>    0.490</td> <td>    0.685</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 5 Series</th>            <td>    9.5228</td> <td>    0.026</td> <td>  359.528</td> <td> 0.000</td> <td>    9.471</td> <td>    9.575</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw 7 Series</th>            <td>    9.8635</td> <td>    0.066</td> <td>  150.390</td> <td> 0.000</td> <td>    9.735</td> <td>    9.992</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw I3</th>                  <td>    0.2982</td> <td>    0.771</td> <td>    0.387</td> <td> 0.699</td> <td>   -1.213</td> <td>    1.810</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw M3</th>                  <td>    9.4810</td> <td>    0.072</td> <td>  131.555</td> <td> 0.000</td> <td>    9.340</td> <td>    9.622</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw M4</th>                  <td>    8.7830</td> <td>    0.061</td> <td>  144.333</td> <td> 0.000</td> <td>    8.664</td> <td>    8.902</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X2</th>                  <td>    0.0699</td> <td>    0.073</td> <td>    0.953</td> <td> 0.340</td> <td>   -0.074</td> <td>    0.214</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X3</th>                  <td>    0.3981</td> <td>    0.052</td> <td>    7.671</td> <td> 0.000</td> <td>    0.296</td> <td>    0.500</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X5</th>                  <td>    0.7346</td> <td>    0.051</td> <td>   14.340</td> <td> 0.000</td> <td>    0.634</td> <td>    0.835</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw X6</th>                  <td>    0.7707</td> <td>    0.076</td> <td>   10.105</td> <td> 0.000</td> <td>    0.621</td> <td>    0.920</td>\n","</tr>\n","<tr>\n","  <th>series_Bmw Z4</th>                  <td>    8.9521</td> <td>    0.059</td> <td>  151.292</td> <td> 0.000</td> <td>    8.836</td> <td>    9.068</td>\n","</tr>\n","<tr>\n","  <th>body_Coupe</th>                     <td>    1.4679</td> <td>    0.034</td> <td>   42.785</td> <td> 0.000</td> <td>    1.401</td> <td>    1.535</td>\n","</tr>\n","<tr>\n","  <th>body_Estate</th>                    <td>    0.2738</td> <td>    0.032</td> <td>    8.425</td> <td> 0.000</td> <td>    0.210</td> <td>    0.338</td>\n","</tr>\n","<tr>\n","  <th>body_Hatchback</th>                 <td>    8.9921</td> <td>    0.025</td> <td>  362.261</td> <td> 0.000</td> <td>    8.943</td> <td>    9.041</td>\n","</tr>\n","<tr>\n","  <th>body_MPV</th>                       <td>    9.0799</td> <td>    0.056</td> <td>  161.540</td> <td> 0.000</td> <td>    8.970</td> <td>    9.190</td>\n","</tr>\n","<tr>\n","  <th>body_SUV</th>                       <td>    9.3452</td> <td>    0.037</td> <td>  254.697</td> <td> 0.000</td> <td>    9.273</td> <td>    9.417</td>\n","</tr>\n","<tr>\n","  <th>fuel_Diesel Hybrid</th>             <td>    0.4471</td> <td>    0.051</td> <td>    8.775</td> <td> 0.000</td> <td>    0.347</td> <td>    0.547</td>\n","</tr>\n","<tr>\n","  <th>fuel_Electric</th>                  <td>    0.5968</td> <td>    0.941</td> <td>    0.634</td> <td> 0.526</td> <td>   -1.247</td> <td>    2.441</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol</th>                    <td>    0.3770</td> <td>    0.020</td> <td>   18.676</td> <td> 0.000</td> <td>    0.337</td> <td>    0.417</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Hybrid</th>             <td>    0.3705</td> <td>    0.085</td> <td>    4.372</td> <td> 0.000</td> <td>    0.204</td> <td>    0.537</td>\n","</tr>\n","<tr>\n","  <th>fuel_Petrol Plug-in Hybrid</th>     <td>    0.5535</td> <td>    0.038</td> <td>   14.723</td> <td> 0.000</td> <td>    0.480</td> <td>    0.627</td>\n","</tr>\n","<tr>\n","  <th>trans_Manual</th>                   <td>    0.4770</td> <td>    0.022</td> <td>   21.641</td> <td> 0.000</td> <td>    0.434</td> <td>    0.520</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>23345.765</td> <th>  Durbin-Watson:     </th>  <td>   1.955</td>  \n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>1133369.850</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>           <td> 5.032</td>   <th>  Prob(JB):          </th>  <td>    0.00</td>  \n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>       <td>35.558</td>   <th>  Cond. No.          </th>  <td>    193.</td>  \n","</tr>\n","</table><br/><br/>Notes:<br/>[1] RÂ² is computed without centering (uncentered) since the model does not contain a constant.<br/>[2] Standard Errors assume that the covariance matrix of the errors is correctly specified."]},"metadata":{},"execution_count":206}]},{"cell_type":"code","source":["fig1, ax1 = plt.subplots()\n","resids = np.exp(y_test) - np.exp(X_test_scaled['y_pred'])\n","sns.distplot(resids, ax=ax1)\n","ax1.set(xlabel='Price, Â£', ylabel='Count')\n","plt.show\n","\n","# Plot data\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = np.exp(y_test), y = resids/1000, ax=ax)\n","ax.set(xlabel='Price, Â£', ylabel='Residual, Â£000s')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":613},"id":"43IrGSdlyMkV","executionInfo":{"status":"ok","timestamp":1675958248155,"user_tz":0,"elapsed":1149,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"fdb982cc-154a-44ab-9178-b8343c76af10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Recalculate model using training scaled, set AND reduced features\n","lin_reg = sm.OLS(y_train, X_train_scaled[feature_cols])\n","results = lin_reg.fit()\n","residual_values = results.resid # residual values\n","\n","#Create a dataFrame for the residuals\n","res = pd.DataFrame(residual_values, columns=['residual'])\n","\n","# Get the values for the x-axis, use index of residuals to find the corresponding price in the original dataframe\n","price_idx = df.loc[res.index]['price']\n","# Merge this price onto the residuals dataframe\n","res_price = res.merge(price_idx, left_index=True, right_index=True)\n","# Adjust the residual value to centre around 0 (otherwise, negaitve residuals do not get procesed with the exp scale)\n","y_adj = np.exp(res_price['residual'])-(1/np.exp(res_price['residual']))\n","\n","# Plot data\n","fig, ax = plt.subplots()\n","sns.scatterplot(x = res_price['price'], y = res_price['residual'], ax=ax)\n","ax.set_ylim(-10,10)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"0_LCpPplsAmY","executionInfo":{"status":"ok","timestamp":1675956045140,"user_tz":0,"elapsed":758,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"31ae357c-4c4a-4bdd-dfe4-af3d21030d53"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.distplot(res_price['residual'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355},"id":"qo3WbUJPvf4-","executionInfo":{"status":"ok","timestamp":1675955783547,"user_tz":0,"elapsed":1040,"user":{"displayName":"Joel Morley","userId":"15853222238753212057"}},"outputId":"c38a8935-2125-4a94-fc66-64f3430b303d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f9fdf161eb0>"]},"metadata":{},"execution_count":168},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}